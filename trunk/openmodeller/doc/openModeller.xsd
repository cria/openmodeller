<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://openmodeller.cria.org.br/xml/1.0"
 xmlns="http://openmodeller.cria.org.br/xml/1.0"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 elementFormDefault="qualified"
 attributeFormDefault="unqualified"
 version="1.0.8" xml:lang="EN">
  <xs:annotation>
    <xs:documentation xml:lang="en">
        XML Schema with all basic element and type definitions used by openModeller.
    </xs:documentation>		
  </xs:annotation>

  <!-- GLOBAL ELEMENTS -->

  <xs:element name="AvailableAlgorithms" type="AvailableAlgorithmsType"/>

  <xs:element name="Algorithms" type="AlgorithmsMetadataType"/>

  <xs:element name="AvailableLayers" type="AvailableLayersType"/>

  <xs:element name="ModelParameters" type="ModelParametersType"/>

  <xs:element name="ModelEnvelope" type="ModelEnvelopeType"/>

  <xs:element name="SerializedModel" type="SerializedModelType"/>

  <xs:element name="ProjectionParameters" type="ProjectionParametersType"/>

  <xs:element name="AreaStatistics" type="AreaStatisticsType"/>

  <!-- TYPE DEFINITIIONS -->

  <xs:complexType name="AvailableAlgorithmsType">
    <xs:sequence>
      <xs:element ref="Algorithms"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AlgorithmsMetadataType">
    <xs:sequence>
      <xs:element name="Algorithm" type="AlgorithmMetadataType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AlgorithmMetadataType">
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Overview" type="xs:string"/>
      <xs:element name="Description" type="xs:string"/>
      <xs:element name="Designers">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Designer" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="Name" type="xs:string"/>
                <xs:attribute name="Contact" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Bibliography" type="xs:string" minOccurs="0"/>
      <xs:element name="Developers">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Developer" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="Name" type="xs:string"/>
                <xs:attribute name="Contact" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AcceptsCategoricalMaps" type="xs:boolean"/>
      <xs:element name="RequiresAbsencePoints" type="xs:boolean"/>
      <xs:element name="Parameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Parameter" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Name" type="xs:string"/>
                  <xs:element name="Type" type="xs:string"/>
                  <xs:element name="Overview" type="xs:string"/>
                  <xs:element name="Description" type="xs:string"/>
                  <xs:element name="AcceptedRange" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Min" type="xs:double" use="optional"/>
                      <xs:attribute name="Max" type="xs:double" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="AcceptedValues" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Value" type="xs:string" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Default" type="xs:string" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="Id" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:string" use="required"/>
    <xs:attribute name="Version" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="BasicAlgorithmDefinitionType">
    <xs:sequence>
      <xs:element name="Parameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Parameter" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="Id" type="xs:string" use="required"/>
                <xs:attribute name="Value" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:string" use="required"/>
    <xs:attribute name="Version" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="SerializedAlgorithmType">
    <xs:sequence>
      <xs:element name="Parameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Parameter" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="Id" type="xs:string" use="required"/>
                <xs:attribute name="Value" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Normalization" type="NormalizationType" minOccurs="0"/>
      <xs:element name="Model">
        <xs:complexType>
          <xs:sequence>
            <xs:any processContents="lax"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:string" use="required"/>
    <xs:attribute name="Version" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="AvailableLayersType">
    <xs:sequence>
      <xs:element name="LayersGroup" type="LayersGroupType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="BasicLayerType">
    <xs:attribute name="Id" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ModellingLayerType">
    <xs:complexContent>
      <xs:extension base="BasicLayerType">
        <xs:attribute name="IsCategorical" type="xs:boolean" use="optional"/>
        <xs:attribute name="Min" type="xs:double" use="optional"/>
        <xs:attribute name="Max" type="xs:double" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LayerMetadataType">
    <xs:complexContent>
      <xs:extension base="ModellingLayerType">
        <xs:sequence>
          <xs:element name="Label" type="xs:string" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="HasProjection" type="xs:boolean" use="optional"/>
        <xs:attribute name="Min" type="xs:double" use="optional"/>
        <xs:attribute name="Max" type="xs:double" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LayersGroupType">
    <xs:sequence>
      <xs:element name="Label" type="xs:string"/>
      <xs:element name="LayersGroup" type="LayersGroupType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Layer" type="LayerMetadataType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Id" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="EnvironmentType">
    <xs:sequence>
      <xs:element name="Map" maxOccurs="unbounded" type="ModellingLayerType"/>
      <xs:element name="Mask" type="BasicLayerType"/>
    </xs:sequence>
    <xs:attribute name="NumLayers" type="xs:int" use="optional"/>
  </xs:complexType>

  <xs:complexType name="OccurrencesType">
    <xs:sequence>
      <xs:element name="CoordinateSystem" type="xs:string" minOccurs="0"/>
      <xs:element name="Point" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="Id" type="xs:string" use="optional"/>
          <xs:attribute name="X" type="xs:string" use="required"/>
          <xs:attribute name="Y" type="xs:string" use="required"/>
          <xs:attribute name="Sample" type="xs:string" use="optional"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Count" type="xs:int" use="optional"/>
    <xs:attribute name="Label" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="SamplerType">
    <xs:sequence>
      <xs:element name="Environment" type="EnvironmentType"/>
      <xs:element name="Presence" type="OccurrencesType"/>
      <xs:element name="Absence" type="OccurrencesType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:attributeGroup name="ScaleNormalizerAttributes">
    <xs:attribute name="UseLayerAsRef" type="xs:int" use="optional"/>
    <xs:attribute name="Min" type="xs:double" use="optional"/>
    <xs:attribute name="Max" type="xs:double" use="optional"/>
    <xs:attribute name="Scales" type="xs:string" use="optional"/>
    <xs:attribute name="Offsets" type="xs:string" use="optional"/>
  </xs:attributeGroup>

  <xs:attributeGroup name="MeanVarianceNormalizerAttributes">
    <xs:attribute name="Mean" type="xs:string" use="optional"/>
    <xs:attribute name="StdDev" type="xs:string" use="optional"/>
  </xs:attributeGroup>

  <xs:complexType name="NormalizationType">
    <!-- Class attribute is optional just to keep old XML compatible with this schema -->
    <xs:attribute name="Class" type="xs:string" use="optional"/>
    <!-- Using super flexible attribute groups is the best we can do to validate different normalizer data structures -->
    <!-- (unless each normalizer had its own element name, but we want to be backwards compatible) -->
    <xs:attributeGroup ref="ScaleNormalizerAttributes"/>
    <xs:attributeGroup ref="MeanVarianceNormalizerAttributes"/>
  </xs:complexType>

  <xs:complexType name="ModelStatisticsType">
    <xs:sequence>
      <xs:element name="ConfusionMatrix" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="Accuracy" type="xs:double" use="required"/>
          <xs:attribute name="OmissionError" type="xs:double" use="required"/>
          <xs:attribute name="CommissionError" type="xs:double" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="RocCurve" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="Auc" type="xs:double" use="required"/>
          <xs:attribute name="Points" type="xs:string" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AreaStatisticsType">
    <xs:attribute name="TotalCells" type="xs:int" use="required"/>
    <xs:attribute name="CellsPredicted" type="xs:int" use="required"/>
    <xs:attribute name="PredictionThreshold" type="xs:double" use="required"/>
  </xs:complexType>

  <xs:complexType name="MapOutputParametersType">
    <xs:sequence>
      <xs:element name="TemplateLayer" type="BasicLayerType"/>
    </xs:sequence>
    <xs:attribute name="FileType" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="ModelParametersType">
    <xs:sequence>
      <xs:element name="Sampler" type="SamplerType"/>
      <xs:element name="Algorithm" type="BasicAlgorithmDefinitionType"/>
      <xs:element name="Options" type="ModelOptionsType" use="optional"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ModelOptionsType">
    <xs:sequence>
      <xs:element name="SpatiallyUnique" type="xs:boolean" use="optional"/>
      <xs:element name="EnvironmentallyUnique" type="xs:boolean" use="optional"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ModelEnvelopeType">
    <xs:sequence>
      <xs:element ref="SerializedModel"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SerializedModelType">
    <xs:sequence>
      <xs:element name="Sampler" type="SamplerType"/>
      <xs:element name="Algorithm" type="SerializedAlgorithmType"/>
      <xs:element name="Statistics" type="ModelStatisticsType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ProjectionParametersType">
    <xs:sequence>
      <xs:element name="Algorithm" type="SerializedAlgorithmType"/>
      <xs:element name="Environment" type="EnvironmentType"/>
      <xs:element name="OutputParameters" type="MapOutputParametersType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
