/**
 * Data used to test GarpRule::evaluate()
 * 
 * @file   test_rules_evaluate_data.cpp
 * @author Ricardo Scachetti Pereira (rpereira@ku.edu)
 * @date   2004-04-07
 * $Id$
 * 
 * LICENSE INFORMATION 
 * 
 * Copyright(c), The Center for Research, University of Kansas, 
 *                 2385 Irving Hill Road, Lawrence, KS 66044-4755, USA.
 * Copyright(c), CRIA - Centro de Referencia em Informacao Ambiental
 *
 * http://www.nhm.ku.edu
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details:
 * 
 * http://www.gnu.org/copyleft/gpl.html
 * 
 */

struct HardcodedSample
{
  int resamples;
  int dimension;
  Scalar * values;
};

Scalar SampleSetValues1[84][3] =  
{   
 { +0.0,  -1.0000,  -1.0000 }, //   0
 { +0.0,  -1.0000,  -1.0000 }, //   1
 { +0.0,  -0.9000,  -0.9000 }, //   2
 { +0.0,  -0.9000,  -0.9000 }, //   3
 { +0.0,  -0.8000,  -0.8000 }, //   4
 { +0.0,  -0.8000,  -0.8000 }, //   5
 { +0.0,  -0.7000,  -0.7000 }, //   6
 { +0.0,  -0.7000,  -0.7000 }, //   7
 { +0.0,  -0.6000,  -0.6000 }, //   8
 { +0.0,  -0.6000,  -0.6000 }, //   9
 { +0.0,  -0.5000,  -0.5000 }, //  10
 { +0.0,  -0.5000,  -0.5000 }, //  11
 { +0.0,  -0.4000,  -0.4000 }, //  12
 { +0.0,  -0.4000,  -0.4000 }, //  13
 { +0.0,  -0.3000,  -0.3000 }, //  14
 { +0.0,  -0.3000,  -0.3000 }, //  15
 { +0.0,  -0.2000,  -0.2000 }, //  16
 { +0.0,  -0.2000,  -0.2000 }, //  17
 { +0.0,  -0.1000,  -0.1000 }, //  18
 { +0.0,  -0.1000,  -0.1000 }, //  19
 { +0.0,  -0.0000,  -0.0000 }, //  20
 { +0.0,  -0.0000,  -0.0000 }, //  21
 { +0.0,  +0.1000,  +0.1000 }, //  22
 { +0.0,  +0.1000,  +0.1000 }, //  23
 { +0.0,  +0.2000,  +0.2000 }, //  24
 { +0.0,  +0.2000,  +0.2000 }, //  25
 { +0.0,  +0.3000,  +0.3000 }, //  26
 { +0.0,  +0.3000,  +0.3000 }, //  27
 { +0.0,  +0.4000,  +0.4000 }, //  28
 { +0.0,  +0.4000,  +0.4000 }, //  29
 { +0.0,  +0.5000,  +0.5000 }, //  30
 { +0.0,  +0.5000,  +0.5000 }, //  31
 { +0.0,  +0.6000,  +0.6000 }, //  32
 { +0.0,  +0.6000,  +0.6000 }, //  33
 { +0.0,  +0.7000,  +0.7000 }, //  34
 { +0.0,  +0.7000,  +0.7000 }, //  35
 { +0.0,  +0.8000,  +0.8000 }, //  36
 { +0.0,  +0.8000,  +0.8000 }, //  37
 { +0.0,  +0.9000,  +0.9000 }, //  38
 { +0.0,  +0.9000,  +0.9000 }, //  39
 { +0.0,  +1.0000,  +1.0000 }, //  40
 { +0.0,  +1.0000,  +1.0000 }, //  41
 { +1.0,  -1.0000,  -1.0000 }, //  42
 { +1.0,  -1.0000,  -1.0000 }, //  43
 { +1.0,  -0.9000,  -0.9000 }, //  44
 { +1.0,  -0.9000,  -0.9000 }, //  45
 { +1.0,  -0.8000,  -0.8000 }, //  46
 { +1.0,  -0.8000,  -0.8000 }, //  47
 { +1.0,  -0.7000,  -0.7000 }, //  48
 { +1.0,  -0.7000,  -0.7000 }, //  49
 { +1.0,  -0.6000,  -0.6000 }, //  50
 { +1.0,  -0.6000,  -0.6000 }, //  51
 { +1.0,  -0.5000,  -0.5000 }, //  52
 { +1.0,  -0.5000,  -0.5000 }, //  53
 { +1.0,  -0.4000,  -0.4000 }, //  54
 { +1.0,  -0.4000,  -0.4000 }, //  55
 { +1.0,  -0.3000,  -0.3000 }, //  56
 { +1.0,  -0.3000,  -0.3000 }, //  57
 { +1.0,  -0.2000,  -0.2000 }, //  58
 { +1.0,  -0.2000,  -0.2000 }, //  59
 { +1.0,  -0.1000,  -0.1000 }, //  60
 { +1.0,  -0.1000,  -0.1000 }, //  61
 { +1.0,  -0.0000,  -0.0000 }, //  62
 { +1.0,  -0.0000,  -0.0000 }, //  63
 { +1.0,  +0.1000,  +0.1000 }, //  64
 { +1.0,  +0.1000,  +0.1000 }, //  65
 { +1.0,  +0.2000,  +0.2000 }, //  66
 { +1.0,  +0.2000,  +0.2000 }, //  67
 { +1.0,  +0.3000,  +0.3000 }, //  68
 { +1.0,  +0.3000,  +0.3000 }, //  69
 { +1.0,  +0.4000,  +0.4000 }, //  70
 { +1.0,  +0.4000,  +0.4000 }, //  71
 { +1.0,  +0.5000,  +0.5000 }, //  72
 { +1.0,  +0.5000,  +0.5000 }, //  73
 { +1.0,  +0.6000,  +0.6000 }, //  74
 { +1.0,  +0.6000,  +0.6000 }, //  75
 { +1.0,  +0.7000,  +0.7000 }, //  76
 { +1.0,  +0.7000,  +0.7000 }, //  77
 { +1.0,  +0.8000,  +0.8000 }, //  78
 { +1.0,  +0.8000,  +0.8000 }, //  79
 { +1.0,  +0.9000,  +0.9000 }, //  80
 { +1.0,  +0.9000,  +0.9000 }, //  81
 { +1.0,  +1.0000,  +1.0000 }, //  82
 { +1.0,  +1.0000,  +1.0000 }, //  83
}; 

// rules to be tested with this sample set
Scalar RulePred1_1 = 1.0; // range rule
Scalar RuleGenes1_1[4] = {-0.51, +0.51, -0.51, +0.51};

Scalar RulePerfs1_1[10] = {-1000,        
			   0.5238095238,  // pXs/n = 44/84
			   0.5000,        // pYs/n = 42/84
			   -1000,  
			   0.5238095238,  // no/n = pXs/n = 44/84
			   0.5000,        // pXYs/no = 22/44
			   -1000,
			   0.5238095238,  // no/n = 44/84
			   0.0,           // significance
 			   -1000
};

Scalar RulePred1_2 = 0.0; // range rule
Scalar RuleGenes1_2[4] = {-0.51, +0.51, -0.51, +0.51};

Scalar RulePerfs1_2[10] = {-1000,        
			   0.5238095238,  // pXs/n = 44/84
			   0.5000,        // pYs/n = 42/84
			   -1000,  
			   0.5238095238,  // no/n = pXs/n = 44/84
			   0.5000,        // pXYs/no = 22/44
			   -1000,
			   0.5238095238,  // no/n = 44/84
			   0.0,           // significance
 			   -1000
};

Scalar RulePred1_3 = 1.0; // negated range rule
Scalar RuleGenes1_3[4] = {-0.51, +0.51, -0.51, +0.51};

Scalar RulePerfs1_3[10] = {-1000,        
			   0.4761904762,  // pXs/n = 40/84
			   0.5000,        // pYs/n = 42/84
			   -1000,  
			   0.4761904762,  // no/n = pXs/n = 40/84
			   0.5000,        // pXYs/no = 20/40
			   -1000,
			   0.4761904762,  // no/n = 40/84
			   0.0,           // significance
 			   -1000
};

Scalar RulePred1_4 = 0.0; // negated range rule
Scalar RuleGenes1_4[4] = {-0.51, +0.51, -0.51, +0.51};

Scalar RulePerfs1_4[10] = {-1000,        
			   0.4761904762,  // pXs/n = 40/84
			   0.5000,        // pYs/n = 42/84
			   -1000,  
			   0.4761904762,  // no/n = pXs/n = 40/84
			   0.5000,        // pXYs/no = 20/40
			   -1000,
			   0.4761904762,  // no/n = 40/84
			   0.0,           // significance
 			   -1000
};

Scalar RulePred1_5 = 1.0; // atomic rule
Scalar RuleGenes1_5[4] = {-0.50, -0.50, -0.50, -0.50};

Scalar RulePerfs1_5[10] = {-1000,        
			   0.0476190476,  // pXs/n =  2/84
			   0.5000,        // pYs/n = 42/84
			   -1000,  
			   0.0476190476,  // no/n = pXs/n =  2/84
			   0.5000,        // pXYs/no =  2/4
			   -1000,
			   0.0476190476,  // no/n =  2/84
			   0.0,           // significance
 			   -1000
};

Scalar RulePred1_6 = 0.0; // atomic rule
Scalar RuleGenes1_6[4] = {-0.50, +0.00, -0.50, +0.00};

Scalar RulePerfs1_6[10] = {-1000,        
			   0.0476190476,  // pXs/n =  2/84
			   0.5000,        // pYs/n = 41/84
			   -1000,  
			   0.0476190476,  // no/n = pXs/n =  2/84
			   0.5000,        // pXYs/no =  2/4
			   -1000,
			   0.0476190476,  // no/n =  2/84
			   0.0,           // significance
 			   -1000
};



Scalar SampleSetValues2[84][3] =  
{   
 { +0.0,  -1.0000,  -1.0000 }, //   0
 { +0.0,  -0.9000,  -0.9000 }, //   1
 { +0.0,  -0.8000,  -0.8000 }, //   2
 { +0.0,  -0.7000,  -0.7000 }, //   3
 { +0.0,  -0.6000,  -0.6000 }, //   4
 { +0.0,  -0.5000,  -0.5000 }, //   5
 { +0.0,  -0.4000,  -0.4000 }, //   6
 { +0.0,  -0.3000,  -0.3000 }, //   7
 { +0.0,  -0.2000,  -0.2000 }, //   8
 { +0.0,  -0.1000,  -0.1000 }, //   9
 { +0.0,  -0.0000,  -0.0000 }, //  10
 { +0.0,  +0.1000,  +0.1000 }, //  11
 { +0.0,  +0.2000,  +0.2000 }, //  12
 { +0.0,  +0.3000,  +0.3000 }, //  13
 { +0.0,  +0.4000,  +0.4000 }, //  14
 { +0.0,  +0.5000,  +0.5000 }, //  15
 { +0.0,  +0.6000,  +0.6000 }, //  16
 { +0.0,  +0.7000,  +0.7000 }, //  17
 { +0.0,  +0.8000,  +0.8000 }, //  18
 { +0.0,  +0.9000,  +0.9000 }, //  19
 { +0.0,  +1.0000,  +1.0000 }, //  20
 { +1.0,  -1.0000,  -1.0000 }, //  21
 { +1.0,  -1.0000,  -1.0000 }, //  22
 { +1.0,  -0.9000,  -0.9000 }, //  23
 { +1.0,  -0.9000,  -0.9000 }, //  24
 { +1.0,  -0.8000,  -0.8000 }, //  25
 { +1.0,  -0.8000,  -0.8000 }, //  26
 { +1.0,  -0.7000,  -0.7000 }, //  27
 { +1.0,  -0.7000,  -0.7000 }, //  28
 { +1.0,  -0.6000,  -0.6000 }, //  29
 { +1.0,  -0.6000,  -0.6000 }, //  30
 { +1.0,  -0.5000,  -0.5000 }, //  31
 { +1.0,  -0.5000,  -0.5000 }, //  32
 { +1.0,  -0.4000,  -0.4000 }, //  33
 { +1.0,  -0.4000,  -0.4000 }, //  34
 { +1.0,  -0.3000,  -0.3000 }, //  35
 { +1.0,  -0.3000,  -0.3000 }, //  36
 { +1.0,  -0.2000,  -0.2000 }, //  37
 { +1.0,  -0.2000,  -0.2000 }, //  38
 { +1.0,  -0.1000,  -0.1000 }, //  39
 { +1.0,  -0.1000,  -0.1000 }, //  40
 { +1.0,  -0.0000,  -0.0000 }, //  41
 { +1.0,  -0.0000,  -0.0000 }, //  42
 { +1.0,  +0.1000,  +0.1000 }, //  43
 { +1.0,  +0.1000,  +0.1000 }, //  44
 { +1.0,  +0.2000,  +0.2000 }, //  45
 { +1.0,  +0.2000,  +0.2000 }, //  46
 { +1.0,  +0.3000,  +0.3000 }, //  47
 { +1.0,  +0.3000,  +0.3000 }, //  48
 { +1.0,  +0.4000,  +0.4000 }, //  49
 { +1.0,  +0.4000,  +0.4000 }, //  50
 { +1.0,  +0.5000,  +0.5000 }, //  51
 { +1.0,  +0.5000,  +0.5000 }, //  52
 { +1.0,  +0.6000,  +0.6000 }, //  53
 { +1.0,  +0.6000,  +0.6000 }, //  54
 { +1.0,  +0.7000,  +0.7000 }, //  55
 { +1.0,  +0.7000,  +0.7000 }, //  56
 { +1.0,  +0.8000,  +0.8000 }, //  57
 { +1.0,  +0.8000,  +0.8000 }, //  58
 { +1.0,  +0.9000,  +0.9000 }, //  59
 { +1.0,  +0.9000,  +0.9000 }, //  60
 { +1.0,  +1.0000,  +1.0000 }, //  61
 { +1.0,  +1.0000,  +1.0000 }  //  62
};

// rules to be tested with this sample set
Scalar RulePred2_1 = 1.0; // range rule
Scalar RuleGenes2_1[4] = {-0.51, +0.51, -0.51, +0.51};

Scalar RulePerfs2_1[10] = {-1000,        
			   0.5238095238,  // pXs/n = 33/63
			   0.6666666667,  // pYs/n = 42/63
			   -1000,  
			   0.5238095238,  // no/n = pXs/n = 33/63
			   0.6666666667,  // pXYs/no = 22/33
			   -1000,
			   0.5238095238,  // no/n = 44/84
			   0.0,           // significance
 			   -1000
};

Scalar RulePred2_2 = 0.0; // range rule
Scalar RuleGenes2_2[4] = {-0.51, +0.51, -0.51, +0.51};

Scalar RulePerfs2_2[10] = {-1000,        
			   0.5238095238,  // pXs/n = 33/63
			   0.3333333333,  // pYs/n = 21/63
			   -1000,  
			   0.5238095238,  // no/n = pXs/n = 33/63
			   0.3333333333,  // pXYs/no = 11/33
			   -1000,
			   0.5238095238,  // no/n = 44/84
			   0.0,           // significance
 			   -1000
};

// rules to be tested with this sample set
Scalar RulePred2_3 = 1.0; // range rule
Scalar RuleGenes2_3[4] = {-1.01, +1.01, -1.01, +1.01};

Scalar RulePerfs2_3[10] = {-1000,        
			   1.0000000000,  // pXs/n = 63/63
			   0.6666666667,  // pYs/n = 42/63
			   -1000,  
			   1.0000000000,  // no/n = pXs/n = 63/63
			   0.6666666667,  // pXYs/no = 42/63
			   -1000,
			   1.0000000000,  // no/n = 63/63
			   0.0,           // significance
 			   -1000
};

Scalar RulePred2_4 = 0.0; // range rule
Scalar RuleGenes2_4[4] = {-1.01, +1.01, -1.01, +1.01};

Scalar RulePerfs2_4[10] = {-1000,        
			   1.0000000000,  // pXs/n = 63/63
			   0.3333333333,  // pYs/n = 21/63
			   -1000,  
			   1.0000000000,  // no/n = pXs/n = 63/63
			   0.3333333333,  // pXYs/no = 21/63
			   -1000,
			   1.0000000000,  // no/n = 63/63
			   0.0,           // significance
 			   -1000
};



Scalar SampleSetValues3[24][3] =  
{   
 { +0.0,  -1.0000,  -1.0000 }, //   0
 { +0.0,  -0.9000,  -0.9000 }, //   1
 { +0.0,  -0.8000,  -0.8000 }, //   2
 { +0.0,  -0.7000,  -0.7000 }, //   3
 { +0.0,  -0.6000,  -0.6000 }, //   4
 { +1.0,  -0.5000,  -0.5000 }, //   5
 { +1.0,  -0.5000,  -0.0000 }, //   5*
 { +1.0,  -0.5000,  -0.5000 }, //   5*
 { +1.0,  -0.5000,  -0.5000 }, //   5*
 { +0.0,  -0.4000,  -0.4000 }, //   6
 { +0.0,  -0.3000,  -0.3000 }, //   7
 { +0.0,  -0.2000,  -0.2000 }, //   8
 { +0.0,  -0.1000,  -0.1000 }, //   9
 { +0.0,  -0.0000,  -0.0000 }, //  10
 { +0.0,  +0.1000,  +0.1000 }, //  11
 { +0.0,  +0.2000,  +0.2000 }, //  12
 { +0.0,  +0.3000,  +0.3000 }, //  13
 { +0.0,  +0.4000,  +0.4000 }, //  14
 { +0.0,  +0.5000,  +0.5000 }, //  15
 { +0.0,  +0.6000,  +0.6000 }, //  16
 { +0.0,  +0.7000,  +0.7000 }, //  17
 { +0.0,  +0.8000,  +0.8000 }, //  18
 { +0.0,  +0.9000,  +0.9000 }, //  19
 { +0.0,  +1.0000,  +1.0000 }, //  20
};


Scalar RulePred3_1 = 1.0; // range rule
Scalar RuleGenes3_1[4] = {-0.51, -0.49, -1.00, +1.00};

Scalar RulePerfs3_1[10] = {-1000,        
			   0.1666666667,  // pXs/n = 4/24
			   0.1666666667,  // pYs/n = 4/24
			   -1000,  
			   0.1666666667,  // no/n = pXs/n = 4/24
			   1.0000,        // pXYs/no = 4/4
			   -1000,
			   0.1666666667,  // no/n = 4/24 
			   0.0000000000,  // sig: not enough no (no < 10)
 			   -1000
};

Scalar RulePred3_2 = 1.0; // range rule
Scalar RuleGenes3_2[4] = {-0.51, -0.49, -0.51, -0.49};

Scalar RulePerfs3_2[10] = {-1000,        
			   0.1250000000,  // pXs/n = 3/24
			   0.1666666667,  // pYs/n = 3/24
			   -1000,  
			   0.1250000000,  // no/n = pXs/n = 3/24
			   1.0000,        // pXYs/no = 3/3
			   -1000,
			   0.1250000000,  // no/n = 3/24 
			   0.0000000000,  // sig: not enough no (no < 10)
 			   -1000
};

Scalar SampleSetValues4[35][3] =  
{   
 { +0.0,  -1.0000,  -1.0000 }, //   0
 { +0.0,  -0.9000,  -0.9000 }, //   1
 { +0.0,  -0.8000,  -0.8000 }, //   2
 { +0.0,  -0.7000,  -0.7000 }, //   3
 { +0.0,  -0.6000,  -0.6000 }, //   4
 { +1.0,  -0.5000,  -0.0000 }, //   5  1 *
 { +1.0,  -0.5000,  -0.0000 }, //   5* 2 *
 { +1.0,  -0.5000,  -0.0000 }, //   5* 3 *
 { +1.0,  -0.5000,  -0.0000 }, //   5* 4 *
 { +1.0,  -0.5000,  -0.5000 }, //   5* 5
 { +1.0,  -0.5000,  -0.5000 }, //   5* 6
 { +1.0,  -0.5000,  -0.5000 }, //   5* 7
 { +1.0,  -0.5000,  -0.5000 }, //   5* 8
 { +1.0,  -0.5000,  -0.5000 }, //   5* 9
 { +1.0,  -0.5000,  -0.5000 }, //   5* 10
 { +1.0,  -0.5000,  -0.5000 }, //   5* 11
 { +1.0,  -0.5000,  -0.5000 }, //   5* 12
 { +1.0,  -0.5000,  -0.5000 }, //   5* 13
 { +1.0,  -0.5000,  -0.5000 }, //   5* 14
 { +1.0,  -0.5000,  -0.5000 }, //   5* 15
 { +0.0,  -0.4000,  -0.4000 }, //   6
 { +0.0,  -0.3000,  -0.3000 }, //   7
 { +0.0,  -0.2000,  -0.2000 }, //   8
 { +0.0,  -0.1000,  -0.1000 }, //   9
 { +0.0,  -0.0000,  -0.0000 }, //  10
 { +0.0,  +0.1000,  +0.1000 }, //  11
 { +0.0,  +0.2000,  +0.2000 }, //  12
 { +0.0,  +0.3000,  +0.3000 }, //  13
 { +0.0,  +0.4000,  +0.4000 }, //  14
 { +0.0,  +0.5000,  +0.5000 }, //  15
 { +0.0,  +0.6000,  +0.6000 }, //  16
 { +0.0,  +0.7000,  +0.7000 }, //  17
 { +0.0,  +0.8000,  +0.8000 }, //  18
 { +0.0,  +0.9000,  +0.9000 }, //  19
 { +0.0,  +1.0000,  +1.0000 }, //  20
};

Scalar RulePred4_1 = 1.0; // range rule
Scalar RuleGenes4_1[4] = {-0.51, -0.49, -1.00, +1.00};

Scalar RulePerfs4_1[10] = {-1000,        
			   0.4285714286,  // pXs/n = 15/35
			   0.4285714286,  // pYs/n = 15/35
			   -1000,  
			   0.4285714286,  // no/n = pXs/n = 15/35
			   1.0000,        // pXYs/no = 15/15
			   -1000,
			   0.4285714286,  // no/n = 15/35
			   4.4721359550,  // sig
 			   -1000
};

Scalar RulePred4_2 = 1.0; // range rule
Scalar RuleGenes4_2[4] = {-0.51, -0.49, -0.51, -0.49};

Scalar RulePerfs4_2[10] = {-1000,        
			   0.3142857143,  // pXs/n = 11/35
			   0.4285714286,  // pYs/n = 15/35
			   -1000,  
			   0.3142857143,  // no/n = pXs/n = 11/35
			   1.0000,        // pXYs/no = 11/11
			   -1000,
			   0.3142857143,  // no/n = 11/35
			   3.8297084310,  // sig
 			   -1000
};

Scalar RulePred4_3 = 1.0; // range rule
Scalar RuleGenes4_3[4] = {-1.00, +1.00, -0.51, -0.39};

Scalar RulePerfs4_3[10] = {-1000,        
			   0.3428571429,  // pXs/n = 12/35
			   0.4285714286,  // pYs/n = 15/35
			   -1000,  
			   0.3428571429,  // no/n = pXs/n = 12/35
			   0.9166666667,  // pXYs/no = 11/12
			   -1000,
			   0.3428571429,  // no/n = 12/35
			   3.4166666667,  // sig
 			   -1000
};

Scalar RulePred4_4 = 0.0; // negated range
Scalar RuleGenes4_4[4] = {-0.51, -0.49, -1.00, +1.00};

Scalar RulePerfs4_4[10] = {-1000,        
			   0.5714285714,  // pXs/n = 20/35
			   0.5714285714,  // pYs/n = 20/35
			   -1000,  
			   0.5714285714,  // no/n = pXs/n = 20/35
			   1.0000,        // pXYs/no = 15/15
			   -1000,
			   0.5714285714,  // no/n = 20/35
			   3.8729833462,  // sig
 			   -1000
};

Scalar RulePred4_5 = 0.0; // negated range rule
Scalar RuleGenes4_5[4] = {-0.51, -0.49, -0.51, -0.49};

Scalar RulePerfs4_5[10] = {-1000,        
			   0.6857142857,  // pXs/n = 24/35
			   0.5714285714,  // pYs/n = 20/35
			   -1000,  
			   0.6857142857,  // no/n = pXs/n = 24/35
			   0.8333333333,  // pXYs/no = 20/24
			   -1000,
			   0.6857142857,  // no/n = 24/35
			   2.5927248644,  // sig
 			   -1000
};

Scalar RulePred4_6 = 0.0; // negated range rule
Scalar RuleGenes4_6[4] = {-1.00, +1.00, -0.51, -0.39};

Scalar RulePerfs4_6[10] = {-1000,        
			   0.6571428571,  // pXs/n = 23/35
			   0.5714285714,  // pYs/n = 20/35
			   -1000,  
			   0.6571428571,  // no/n = pXs/n = 23/35
			   0.8260869565,  // pXYs/no = 19/23
			   -1000,
			   0.6571428571,  // no/n = 20/35
			   2.4679099883,  // sig
 			   -1000
};


#define NUM_SAMPLE_SETS 5

struct HardcodedSample SamplesSet[NUM_SAMPLE_SETS] = 
  {
    { 0,  0, NULL},
    { 84, 2, (Scalar *) SampleSetValues1 },
    { 63, 2, (Scalar *) SampleSetValues2 },
    { 24, 2, (Scalar *) SampleSetValues3 },
    { 35, 2, (Scalar *) SampleSetValues4 }
  };

