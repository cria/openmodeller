.\" Text automatically generated by txt2man
.TH om_model  "04 September 2013" "" ""
.SH NAME
\fBom_model \fP- create a distribution model using the openModeller framework
\fB
.SH SYNOPSIS
.nf
.fam C
     \fBom_model\fP [-] \fIv\fP \fB--version\fP | \fIr\fP \fB--xml-req\fP \fIXML_REQUEST_FILE\fP \fIm\fP \fB--model-file\fP \fIFILE\fP [ \fB--log-level\fP \fILEVEL\fP ] [ \fB--log-file\fP \fIFILE\fP ] [ \fB--prog-file\fP \fIFILE\fP ]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBom_model\fP is a command line tool to generate distribution models. The main input is an XML file containing a model request according to the ModelParameters element definition in http://openmodeller.cria.org.br/xml/1.0/openModeller.xsd (see also model_request.xml in the openModeller examples directory). The distribution model generated by openModeller will be stored in another file specified as a parameter. This file is also an XML file, but now following the SerializedModel element definition in http://openmodeller.cria.org.br/xml/1.0/openModeller.xsd . Please note that each algorithm has its own way to represent models. To generate distribution maps, use om_project (you will need a serialized model as a parameter).
.SH OPTIONS
.TP
.B
-\fIv\fP, \fB--version\fP
Display version info.
.TP
.B
-\fIr\fP, \fB--xml-req\fP
File containing a model request in XML.
.TP
.B
-\fIm\fP, \fB--model-file\fP
File where the generated model will be stored.
.TP
.B
\fB--log-level\fP
openModeller log level: debug, warn, info or error. Defaults to "info".
.TP
.B
\fB--log-file\fP
File to store log information.
.TP
.B
\fB--prog-file\fP
File to store progress (\fB-1\fP=queued, \fB-2\fP=aborted, \fB-3\fP=cancelled, [0,100]=progress).
.PP
\fB-c\fP, \fB--config-file\fP Configuration file for openModeller (available since version 1.4).
.SH AUTHORS
Renato De Giovanni <renato at cria dot org dot br>
