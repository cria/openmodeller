.\" Text automatically generated by txt2man
.TH om_evaluate  "09 December 2014" "" ""
.SH NAME
\fBom_evaluate \fP- return model values given a set of points and an environmental scenario using the openModeller framework
\fB
.SH SYNOPSIS
.nf
.fam C
     \fBom_evaluate\fP [-] \fIv\fP \fB--version\fP | \fIr\fP \fB--xml-req\fP \fIFILE\fP | \fIo\fP \fB--model\fP \fIFILE\fP \fIp\fP \fB--points\fP \fIFILE\fP  [ \fIs\fP \fB--result\fP \fIFILE\fP ] [ \fB--log-level\fP \fILEVEL\fP ] [ \fB--log-file\fP \fIFILE\fP ] [ \fB--prog-file\fP \fIFILE\fP ]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBom_evaluate\fP is a command line tool to return raw model values given a set of points and an environmental scenario. There are two ways of providing input: one is to specify an XML file containing a request according to the ModelEvaluationParameters element definition in the openModeller XML Schema located in http://openmodeller.cria.org.br/xml/2.0/openModeller.xsd (the test_request.xml file in the openModeller examples directory can also be used with \fBom_evaluate\fP, although the root element name is related to the test operation) and the other is to specify a file with a serialized model according to the SerializedModel element definition in the openModeller XML Schema together with another file with the points to be tested (TAB-delimited, following the same pattern used to specify points in text files for om_console). When providing a serialized model and a file with points to be tested, these points must have the same spatial reference and label as the training points that can be found in the serialized model. In this case, the layers used during the test will also be the same ones used to create the model. Results will be either displayed on the screen or stored in another file if the corresponding parameter was specified. The result will be in XML, following the ModelEvaluationType definition in the openModeller XML Schema. Serialized models can be generated with om_console or om_model. When a point does not have the complete environmental values (one or more layer has no data), model evaluation returns \fB-1\fP.
.SH OPTIONS
.TP
.B
-\fIv\fP, \fB--version\fP
Display version info.
.TP
.B
-\fIr\fP, \fB--xml-req\fP
File containing a test request in XML.
.TP
.B
-\fIo\fP, \fB--model\fP
File containing a serialized model in XML.
.TP
.B
-\fIp\fP, \fB--points\fP
File containing the points to be tested.
.TP
.B
-\fIs\fP, \fB--result\fP
File where the test result will be stored.
.TP
.B
\fB--log-level\fP
openModeller log level: debug, warn, info or error. Defaults to "info".
.TP
.B
\fB--log-file\fP
File to store log information.
.TP
.B
\fB--prog-file\fP
File to store progress (\fB-1\fP=queued, \fB-2\fP=aborted, \fB-3\fP=cancelled, [0,100]=progress).
.PP
\fB-c\fP, \fB--config-file\fP Configuration file for openModeller (available since version 1.4).
.SH AUTHORS
Renato De Giovanni <renato at cria dot org dot br>
