/* soapServer.cpp
   Generated by gSOAP 2.7.6d from om_soap.hh
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.7.6d 2006-12-04 13:26:42 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif

	do
	{
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			soap->error = SOAP_EOF;
			return soap_send_fault(soap);
		}
#endif

		soap_begin(soap);

#ifndef WITH_FASTCGI
		if (!--k)
			soap->keep_alive = 0;
#endif

		if (soap_begin_recv(soap))
		{	if (soap->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(soap);
#else 
				return soap_send_fault(soap);
#endif
			}
			soap_closesock(soap);

			continue;
		}

		if (soap_envelope_begin_in(soap)
		 || soap_recv_header(soap)
		 || soap_body_begin_in(soap)
		 || soap_serve_request(soap)
		 || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:ping"))
		return soap_serve_omws__ping(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:getAlgorithms"))
		return soap_serve_omws__getAlgorithms(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:getLayers"))
		return soap_serve_omws__getLayers(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:createModel"))
		return soap_serve_omws__createModel(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:getModel"))
		return soap_serve_omws__getModel(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:projectModel"))
		return soap_serve_omws__projectModel(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:getProgress"))
		return soap_serve_omws__getProgress(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:getLog"))
		return soap_serve_omws__getLog(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:getMapAsAttachment"))
		return soap_serve_omws__getMapAsAttachment(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:getMapAsUrl"))
		return soap_serve_omws__getMapAsUrl(soap);
	if (!soap_match_tag(soap, soap->tag, "omws:getProjectionMetadata"))
		return soap_serve_omws__getProjectionMetadata(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__ping(struct soap *soap)
{	struct omws__ping soap_tmp_omws__ping;
	struct omws__pingResponse soap_tmp_omws__pingResponse;
	soap_default_omws__pingResponse(soap, &soap_tmp_omws__pingResponse);
	soap_default_omws__ping(soap, &soap_tmp_omws__ping);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__ping(soap, &soap_tmp_omws__ping, "omws:ping", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__ping(soap, soap_tmp_omws__ping._, soap_tmp_omws__pingResponse.status);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__pingResponse(soap, &soap_tmp_omws__pingResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__pingResponse(soap, &soap_tmp_omws__pingResponse, "omws:pingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__pingResponse(soap, &soap_tmp_omws__pingResponse, "omws:pingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__getAlgorithms(struct soap *soap)
{	struct omws__getAlgorithms soap_tmp_omws__getAlgorithms;
	struct omws__getAlgorithmsResponse out;
	soap_default_omws__getAlgorithmsResponse(soap, &out);
	soap_default_omws__getAlgorithms(soap, &soap_tmp_omws__getAlgorithms);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__getAlgorithms(soap, &soap_tmp_omws__getAlgorithms, "omws:getAlgorithms", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__getAlgorithms(soap, soap_tmp_omws__getAlgorithms._, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__getAlgorithmsResponse(soap, &out);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__getAlgorithmsResponse(soap, &out, "omws:getAlgorithmsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__getAlgorithmsResponse(soap, &out, "omws:getAlgorithmsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__getLayers(struct soap *soap)
{	struct omws__getLayers soap_tmp_omws__getLayers;
	struct omws__getLayersResponse out;
	soap_default_omws__getLayersResponse(soap, &out);
	soap_default_omws__getLayers(soap, &soap_tmp_omws__getLayers);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__getLayers(soap, &soap_tmp_omws__getLayers, "omws:getLayers", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__getLayers(soap, soap_tmp_omws__getLayers._, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__getLayersResponse(soap, &out);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__getLayersResponse(soap, &out, "omws:getLayersResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__getLayersResponse(soap, &out, "omws:getLayersResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__createModel(struct soap *soap)
{	struct omws__createModel soap_tmp_omws__createModel;
	struct omws__createModelResponse soap_tmp_omws__createModelResponse;
	soap_default_omws__createModelResponse(soap, &soap_tmp_omws__createModelResponse);
	soap_default_omws__createModel(soap, &soap_tmp_omws__createModel);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__createModel(soap, &soap_tmp_omws__createModel, "omws:createModel", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__createModel(soap, soap_tmp_omws__createModel.om__ModelParameters, soap_tmp_omws__createModelResponse.ticket);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__createModelResponse(soap, &soap_tmp_omws__createModelResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__createModelResponse(soap, &soap_tmp_omws__createModelResponse, "omws:createModelResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__createModelResponse(soap, &soap_tmp_omws__createModelResponse, "omws:createModelResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__getModel(struct soap *soap)
{	struct omws__getModel soap_tmp_omws__getModel;
	struct omws__getModelResponse out;
	soap_default_omws__getModelResponse(soap, &out);
	soap_default_omws__getModel(soap, &soap_tmp_omws__getModel);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__getModel(soap, &soap_tmp_omws__getModel, "omws:getModel", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__getModel(soap, soap_tmp_omws__getModel.ticket, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__getModelResponse(soap, &out);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__getModelResponse(soap, &out, "omws:getModelResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__getModelResponse(soap, &out, "omws:getModelResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__projectModel(struct soap *soap)
{	struct omws__projectModel soap_tmp_omws__projectModel;
	struct omws__projectModelResponse soap_tmp_omws__projectModelResponse;
	soap_default_omws__projectModelResponse(soap, &soap_tmp_omws__projectModelResponse);
	soap_default_omws__projectModel(soap, &soap_tmp_omws__projectModel);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__projectModel(soap, &soap_tmp_omws__projectModel, "omws:projectModel", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__projectModel(soap, soap_tmp_omws__projectModel.om__ProjectionParameters, soap_tmp_omws__projectModelResponse.ticket);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__projectModelResponse(soap, &soap_tmp_omws__projectModelResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__projectModelResponse(soap, &soap_tmp_omws__projectModelResponse, "omws:projectModelResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__projectModelResponse(soap, &soap_tmp_omws__projectModelResponse, "omws:projectModelResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__getProgress(struct soap *soap)
{	struct omws__getProgress soap_tmp_omws__getProgress;
	struct omws__getProgressResponse soap_tmp_omws__getProgressResponse;
	soap_default_omws__getProgressResponse(soap, &soap_tmp_omws__getProgressResponse);
	soap_default_omws__getProgress(soap, &soap_tmp_omws__getProgress);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__getProgress(soap, &soap_tmp_omws__getProgress, "omws:getProgress", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__getProgress(soap, soap_tmp_omws__getProgress.ticket, soap_tmp_omws__getProgressResponse.progress);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__getProgressResponse(soap, &soap_tmp_omws__getProgressResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__getProgressResponse(soap, &soap_tmp_omws__getProgressResponse, "omws:getProgressResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__getProgressResponse(soap, &soap_tmp_omws__getProgressResponse, "omws:getProgressResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__getLog(struct soap *soap)
{	struct omws__getLog soap_tmp_omws__getLog;
	struct omws__getLogResponse soap_tmp_omws__getLogResponse;
	soap_default_omws__getLogResponse(soap, &soap_tmp_omws__getLogResponse);
	soap_default_omws__getLog(soap, &soap_tmp_omws__getLog);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__getLog(soap, &soap_tmp_omws__getLog, "omws:getLog", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__getLog(soap, soap_tmp_omws__getLog.ticket, soap_tmp_omws__getLogResponse.log);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__getLogResponse(soap, &soap_tmp_omws__getLogResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__getLogResponse(soap, &soap_tmp_omws__getLogResponse, "omws:getLogResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__getLogResponse(soap, &soap_tmp_omws__getLogResponse, "omws:getLogResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__getMapAsAttachment(struct soap *soap)
{	struct omws__getMapAsAttachment soap_tmp_omws__getMapAsAttachment;
	struct omws__getMapAsAttachmentResponse soap_tmp_omws__getMapAsAttachmentResponse;
	soap_default_omws__getMapAsAttachmentResponse(soap, &soap_tmp_omws__getMapAsAttachmentResponse);
	soap_default_omws__getMapAsAttachment(soap, &soap_tmp_omws__getMapAsAttachment);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__getMapAsAttachment(soap, &soap_tmp_omws__getMapAsAttachment, "omws:getMapAsAttachment", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__getMapAsAttachment(soap, soap_tmp_omws__getMapAsAttachment.ticket, soap_tmp_omws__getMapAsAttachmentResponse.file);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__getMapAsAttachmentResponse(soap, &soap_tmp_omws__getMapAsAttachmentResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__getMapAsAttachmentResponse(soap, &soap_tmp_omws__getMapAsAttachmentResponse, "omws:getMapAsAttachmentResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__getMapAsAttachmentResponse(soap, &soap_tmp_omws__getMapAsAttachmentResponse, "omws:getMapAsAttachmentResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__getMapAsUrl(struct soap *soap)
{	struct omws__getMapAsUrl soap_tmp_omws__getMapAsUrl;
	struct omws__getMapAsUrlResponse soap_tmp_omws__getMapAsUrlResponse;
	soap_default_omws__getMapAsUrlResponse(soap, &soap_tmp_omws__getMapAsUrlResponse);
	soap_default_omws__getMapAsUrl(soap, &soap_tmp_omws__getMapAsUrl);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__getMapAsUrl(soap, &soap_tmp_omws__getMapAsUrl, "omws:getMapAsUrl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__getMapAsUrl(soap, soap_tmp_omws__getMapAsUrl.ticket, soap_tmp_omws__getMapAsUrlResponse.url);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__getMapAsUrlResponse(soap, &soap_tmp_omws__getMapAsUrlResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__getMapAsUrlResponse(soap, &soap_tmp_omws__getMapAsUrlResponse, "omws:getMapAsUrlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__getMapAsUrlResponse(soap, &soap_tmp_omws__getMapAsUrlResponse, "omws:getMapAsUrlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_omws__getProjectionMetadata(struct soap *soap)
{	struct omws__getProjectionMetadata soap_tmp_omws__getProjectionMetadata;
	struct omws__getProjectionMetadataResponse out;
	soap_default_omws__getProjectionMetadataResponse(soap, &out);
	soap_default_omws__getProjectionMetadata(soap, &soap_tmp_omws__getProjectionMetadata);
	soap->encodingStyle = NULL;
	if (!soap_get_omws__getProjectionMetadata(soap, &soap_tmp_omws__getProjectionMetadata, "omws:getProjectionMetadata", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = omws__getProjectionMetadata(soap, soap_tmp_omws__getProjectionMetadata.ticket, &out);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_omws__getProjectionMetadataResponse(soap, &out);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_omws__getProjectionMetadataResponse(soap, &out, "omws:getProjectionMetadataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_omws__getProjectionMetadataResponse(soap, &out, "omws:getProjectionMetadataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

/* End of soapServer.cpp */
