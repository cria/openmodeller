/* soapH.h
   Generated by gSOAP 2.8.15 from om_soap.hh

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (10)
#endif

#define soap_default_xsd__int(soap, a) soap_default_int(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_xsd__int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_xsd__int
#define soap_write_xsd__int(soap, data) ( soap_serialize_xsd__int(soap, data), soap_begin_send(soap) || soap_put_xsd__int(soap, data, "xsd:int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_xsd__int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_xsd__int
#define soap_read_xsd__int(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (9)
#endif

#define soap_default_xsd__double(soap, a) soap_default_double(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_xsd__double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_xsd__double
#define soap_write_xsd__double(soap, data) ( soap_serialize_xsd__double(soap, data), soap_begin_send(soap) || soap_put_xsd__double(soap, data, "xsd:double", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_xsd__double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_xsd__double
#define soap_read_xsd__double(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__double(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_serialize_double(soap, data), soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_serialize_unsignedByte(soap, data), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_serialize_unsignedInt(soap, data), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (53)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_omws__getProjectionMetadata
#define SOAP_TYPE_omws__getProjectionMetadata (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getProjectionMetadata(struct soap*, struct omws__getProjectionMetadata *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getProjectionMetadata(struct soap*, const struct omws__getProjectionMetadata *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getProjectionMetadata(struct soap*, const char*, int, const struct omws__getProjectionMetadata *, const char*);
SOAP_FMAC3 struct omws__getProjectionMetadata * SOAP_FMAC4 soap_in_omws__getProjectionMetadata(struct soap*, const char*, struct omws__getProjectionMetadata *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getProjectionMetadata(struct soap*, const struct omws__getProjectionMetadata *, const char*, const char*);

#ifndef soap_write_omws__getProjectionMetadata
#define soap_write_omws__getProjectionMetadata(soap, data) ( soap_serialize_omws__getProjectionMetadata(soap, data), soap_begin_send(soap) || soap_put_omws__getProjectionMetadata(soap, data, "omws:getProjectionMetadata", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getProjectionMetadata * SOAP_FMAC4 soap_get_omws__getProjectionMetadata(struct soap*, struct omws__getProjectionMetadata *, const char*, const char*);

#ifndef soap_read_omws__getProjectionMetadata
#define soap_read_omws__getProjectionMetadata(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getProjectionMetadata(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getProjectionMetadata * SOAP_FMAC2 soap_instantiate_omws__getProjectionMetadata(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getProjectionMetadata * soap_new_omws__getProjectionMetadata(struct soap *soap, int n = -1) { return soap_instantiate_omws__getProjectionMetadata(soap, n, NULL, NULL, NULL); }

inline struct omws__getProjectionMetadata * soap_new_req_omws__getProjectionMetadata(struct soap *soap) { struct omws__getProjectionMetadata *_p = soap_instantiate_omws__getProjectionMetadata(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getProjectionMetadata(soap, _p); } return _p; }

inline struct omws__getProjectionMetadata * soap_new_set_omws__getProjectionMetadata(struct soap *soap, char *ticket) { struct omws__getProjectionMetadata *_p = soap_instantiate_omws__getProjectionMetadata(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getProjectionMetadata(soap, _p); _p->ticket = ticket; } return _p; }

inline void soap_delete_omws__getProjectionMetadata(struct soap *soap, struct omws__getProjectionMetadata *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getProjectionMetadata(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getProjectionMetadataResponse
#define SOAP_TYPE_omws__getProjectionMetadataResponse (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getProjectionMetadataResponse(struct soap*, struct omws__getProjectionMetadataResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getProjectionMetadataResponse(struct soap*, const struct omws__getProjectionMetadataResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getProjectionMetadataResponse(struct soap*, const char*, int, const struct omws__getProjectionMetadataResponse *, const char*);
SOAP_FMAC3 struct omws__getProjectionMetadataResponse * SOAP_FMAC4 soap_in_omws__getProjectionMetadataResponse(struct soap*, const char*, struct omws__getProjectionMetadataResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getProjectionMetadataResponse(struct soap*, const struct omws__getProjectionMetadataResponse *, const char*, const char*);

#ifndef soap_write_omws__getProjectionMetadataResponse
#define soap_write_omws__getProjectionMetadataResponse(soap, data) ( soap_serialize_omws__getProjectionMetadataResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getProjectionMetadataResponse(soap, data, "omws:getProjectionMetadataResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getProjectionMetadataResponse * SOAP_FMAC4 soap_get_omws__getProjectionMetadataResponse(struct soap*, struct omws__getProjectionMetadataResponse *, const char*, const char*);

#ifndef soap_read_omws__getProjectionMetadataResponse
#define soap_read_omws__getProjectionMetadataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getProjectionMetadataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getProjectionMetadataResponse * SOAP_FMAC2 soap_instantiate_omws__getProjectionMetadataResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getProjectionMetadataResponse * soap_new_omws__getProjectionMetadataResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getProjectionMetadataResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getProjectionMetadataResponse * soap_new_req_omws__getProjectionMetadataResponse(struct soap *soap) { struct omws__getProjectionMetadataResponse *_p = soap_instantiate_omws__getProjectionMetadataResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getProjectionMetadataResponse(soap, _p); } return _p; }

inline struct omws__getProjectionMetadataResponse * soap_new_set_omws__getProjectionMetadataResponse(struct soap *soap, int FileSize, wchar_t *om__ProjectionEnvelope) { struct omws__getProjectionMetadataResponse *_p = soap_instantiate_omws__getProjectionMetadataResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getProjectionMetadataResponse(soap, _p); _p->FileSize = FileSize; _p->om__ProjectionEnvelope = om__ProjectionEnvelope; } return _p; }

inline void soap_delete_omws__getProjectionMetadataResponse(struct soap *soap, struct omws__getProjectionMetadataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getProjectionMetadataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLayerAsWcs
#define SOAP_TYPE_omws__getLayerAsWcs (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLayerAsWcs(struct soap*, struct omws__getLayerAsWcs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLayerAsWcs(struct soap*, const struct omws__getLayerAsWcs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLayerAsWcs(struct soap*, const char*, int, const struct omws__getLayerAsWcs *, const char*);
SOAP_FMAC3 struct omws__getLayerAsWcs * SOAP_FMAC4 soap_in_omws__getLayerAsWcs(struct soap*, const char*, struct omws__getLayerAsWcs *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLayerAsWcs(struct soap*, const struct omws__getLayerAsWcs *, const char*, const char*);

#ifndef soap_write_omws__getLayerAsWcs
#define soap_write_omws__getLayerAsWcs(soap, data) ( soap_serialize_omws__getLayerAsWcs(soap, data), soap_begin_send(soap) || soap_put_omws__getLayerAsWcs(soap, data, "omws:getLayerAsWcs", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayerAsWcs * SOAP_FMAC4 soap_get_omws__getLayerAsWcs(struct soap*, struct omws__getLayerAsWcs *, const char*, const char*);

#ifndef soap_read_omws__getLayerAsWcs
#define soap_read_omws__getLayerAsWcs(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLayerAsWcs(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLayerAsWcs * SOAP_FMAC2 soap_instantiate_omws__getLayerAsWcs(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLayerAsWcs * soap_new_omws__getLayerAsWcs(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLayerAsWcs(soap, n, NULL, NULL, NULL); }

inline struct omws__getLayerAsWcs * soap_new_req_omws__getLayerAsWcs(struct soap *soap) { struct omws__getLayerAsWcs *_p = soap_instantiate_omws__getLayerAsWcs(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsWcs(soap, _p); } return _p; }

inline struct omws__getLayerAsWcs * soap_new_set_omws__getLayerAsWcs(struct soap *soap, char *id) { struct omws__getLayerAsWcs *_p = soap_instantiate_omws__getLayerAsWcs(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsWcs(soap, _p); _p->id = id; } return _p; }

inline void soap_delete_omws__getLayerAsWcs(struct soap *soap, struct omws__getLayerAsWcs *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLayerAsWcs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLayerAsWcsResponse
#define SOAP_TYPE_omws__getLayerAsWcsResponse (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLayerAsWcsResponse(struct soap*, struct omws__getLayerAsWcsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLayerAsWcsResponse(struct soap*, const struct omws__getLayerAsWcsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLayerAsWcsResponse(struct soap*, const char*, int, const struct omws__getLayerAsWcsResponse *, const char*);
SOAP_FMAC3 struct omws__getLayerAsWcsResponse * SOAP_FMAC4 soap_in_omws__getLayerAsWcsResponse(struct soap*, const char*, struct omws__getLayerAsWcsResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLayerAsWcsResponse(struct soap*, const struct omws__getLayerAsWcsResponse *, const char*, const char*);

#ifndef soap_write_omws__getLayerAsWcsResponse
#define soap_write_omws__getLayerAsWcsResponse(soap, data) ( soap_serialize_omws__getLayerAsWcsResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getLayerAsWcsResponse(soap, data, "omws:getLayerAsWcsResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayerAsWcsResponse * SOAP_FMAC4 soap_get_omws__getLayerAsWcsResponse(struct soap*, struct omws__getLayerAsWcsResponse *, const char*, const char*);

#ifndef soap_read_omws__getLayerAsWcsResponse
#define soap_read_omws__getLayerAsWcsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLayerAsWcsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLayerAsWcsResponse * SOAP_FMAC2 soap_instantiate_omws__getLayerAsWcsResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLayerAsWcsResponse * soap_new_omws__getLayerAsWcsResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLayerAsWcsResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getLayerAsWcsResponse * soap_new_req_omws__getLayerAsWcsResponse(struct soap *soap, char *url) { struct omws__getLayerAsWcsResponse *_p = soap_instantiate_omws__getLayerAsWcsResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsWcsResponse(soap, _p); _p->url = url; } return _p; }

inline struct omws__getLayerAsWcsResponse * soap_new_set_omws__getLayerAsWcsResponse(struct soap *soap, char *url) { struct omws__getLayerAsWcsResponse *_p = soap_instantiate_omws__getLayerAsWcsResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsWcsResponse(soap, _p); _p->url = url; } return _p; }

inline void soap_delete_omws__getLayerAsWcsResponse(struct soap *soap, struct omws__getLayerAsWcsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLayerAsWcsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLayerAsUrl
#define SOAP_TYPE_omws__getLayerAsUrl (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLayerAsUrl(struct soap*, struct omws__getLayerAsUrl *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLayerAsUrl(struct soap*, const struct omws__getLayerAsUrl *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLayerAsUrl(struct soap*, const char*, int, const struct omws__getLayerAsUrl *, const char*);
SOAP_FMAC3 struct omws__getLayerAsUrl * SOAP_FMAC4 soap_in_omws__getLayerAsUrl(struct soap*, const char*, struct omws__getLayerAsUrl *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLayerAsUrl(struct soap*, const struct omws__getLayerAsUrl *, const char*, const char*);

#ifndef soap_write_omws__getLayerAsUrl
#define soap_write_omws__getLayerAsUrl(soap, data) ( soap_serialize_omws__getLayerAsUrl(soap, data), soap_begin_send(soap) || soap_put_omws__getLayerAsUrl(soap, data, "omws:getLayerAsUrl", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayerAsUrl * SOAP_FMAC4 soap_get_omws__getLayerAsUrl(struct soap*, struct omws__getLayerAsUrl *, const char*, const char*);

#ifndef soap_read_omws__getLayerAsUrl
#define soap_read_omws__getLayerAsUrl(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLayerAsUrl(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLayerAsUrl * SOAP_FMAC2 soap_instantiate_omws__getLayerAsUrl(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLayerAsUrl * soap_new_omws__getLayerAsUrl(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLayerAsUrl(soap, n, NULL, NULL, NULL); }

inline struct omws__getLayerAsUrl * soap_new_req_omws__getLayerAsUrl(struct soap *soap) { struct omws__getLayerAsUrl *_p = soap_instantiate_omws__getLayerAsUrl(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsUrl(soap, _p); } return _p; }

inline struct omws__getLayerAsUrl * soap_new_set_omws__getLayerAsUrl(struct soap *soap, char *id) { struct omws__getLayerAsUrl *_p = soap_instantiate_omws__getLayerAsUrl(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsUrl(soap, _p); _p->id = id; } return _p; }

inline void soap_delete_omws__getLayerAsUrl(struct soap *soap, struct omws__getLayerAsUrl *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLayerAsUrl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLayerAsUrlResponse
#define SOAP_TYPE_omws__getLayerAsUrlResponse (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLayerAsUrlResponse(struct soap*, struct omws__getLayerAsUrlResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLayerAsUrlResponse(struct soap*, const struct omws__getLayerAsUrlResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLayerAsUrlResponse(struct soap*, const char*, int, const struct omws__getLayerAsUrlResponse *, const char*);
SOAP_FMAC3 struct omws__getLayerAsUrlResponse * SOAP_FMAC4 soap_in_omws__getLayerAsUrlResponse(struct soap*, const char*, struct omws__getLayerAsUrlResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLayerAsUrlResponse(struct soap*, const struct omws__getLayerAsUrlResponse *, const char*, const char*);

#ifndef soap_write_omws__getLayerAsUrlResponse
#define soap_write_omws__getLayerAsUrlResponse(soap, data) ( soap_serialize_omws__getLayerAsUrlResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getLayerAsUrlResponse(soap, data, "omws:getLayerAsUrlResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayerAsUrlResponse * SOAP_FMAC4 soap_get_omws__getLayerAsUrlResponse(struct soap*, struct omws__getLayerAsUrlResponse *, const char*, const char*);

#ifndef soap_read_omws__getLayerAsUrlResponse
#define soap_read_omws__getLayerAsUrlResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLayerAsUrlResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLayerAsUrlResponse * SOAP_FMAC2 soap_instantiate_omws__getLayerAsUrlResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLayerAsUrlResponse * soap_new_omws__getLayerAsUrlResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLayerAsUrlResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getLayerAsUrlResponse * soap_new_req_omws__getLayerAsUrlResponse(struct soap *soap, char *url) { struct omws__getLayerAsUrlResponse *_p = soap_instantiate_omws__getLayerAsUrlResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsUrlResponse(soap, _p); _p->url = url; } return _p; }

inline struct omws__getLayerAsUrlResponse * soap_new_set_omws__getLayerAsUrlResponse(struct soap *soap, char *url) { struct omws__getLayerAsUrlResponse *_p = soap_instantiate_omws__getLayerAsUrlResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsUrlResponse(soap, _p); _p->url = url; } return _p; }

inline void soap_delete_omws__getLayerAsUrlResponse(struct soap *soap, struct omws__getLayerAsUrlResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLayerAsUrlResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLayerAsAttachment
#define SOAP_TYPE_omws__getLayerAsAttachment (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLayerAsAttachment(struct soap*, struct omws__getLayerAsAttachment *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLayerAsAttachment(struct soap*, const struct omws__getLayerAsAttachment *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLayerAsAttachment(struct soap*, const char*, int, const struct omws__getLayerAsAttachment *, const char*);
SOAP_FMAC3 struct omws__getLayerAsAttachment * SOAP_FMAC4 soap_in_omws__getLayerAsAttachment(struct soap*, const char*, struct omws__getLayerAsAttachment *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLayerAsAttachment(struct soap*, const struct omws__getLayerAsAttachment *, const char*, const char*);

#ifndef soap_write_omws__getLayerAsAttachment
#define soap_write_omws__getLayerAsAttachment(soap, data) ( soap_serialize_omws__getLayerAsAttachment(soap, data), soap_begin_send(soap) || soap_put_omws__getLayerAsAttachment(soap, data, "omws:getLayerAsAttachment", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayerAsAttachment * SOAP_FMAC4 soap_get_omws__getLayerAsAttachment(struct soap*, struct omws__getLayerAsAttachment *, const char*, const char*);

#ifndef soap_read_omws__getLayerAsAttachment
#define soap_read_omws__getLayerAsAttachment(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLayerAsAttachment(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLayerAsAttachment * SOAP_FMAC2 soap_instantiate_omws__getLayerAsAttachment(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLayerAsAttachment * soap_new_omws__getLayerAsAttachment(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLayerAsAttachment(soap, n, NULL, NULL, NULL); }

inline struct omws__getLayerAsAttachment * soap_new_req_omws__getLayerAsAttachment(struct soap *soap) { struct omws__getLayerAsAttachment *_p = soap_instantiate_omws__getLayerAsAttachment(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsAttachment(soap, _p); } return _p; }

inline struct omws__getLayerAsAttachment * soap_new_set_omws__getLayerAsAttachment(struct soap *soap, char *id) { struct omws__getLayerAsAttachment *_p = soap_instantiate_omws__getLayerAsAttachment(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsAttachment(soap, _p); _p->id = id; } return _p; }

inline void soap_delete_omws__getLayerAsAttachment(struct soap *soap, struct omws__getLayerAsAttachment *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLayerAsAttachment(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLayerAsAttachmentResponse
#define SOAP_TYPE_omws__getLayerAsAttachmentResponse (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLayerAsAttachmentResponse(struct soap*, struct omws__getLayerAsAttachmentResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLayerAsAttachmentResponse(struct soap*, const struct omws__getLayerAsAttachmentResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLayerAsAttachmentResponse(struct soap*, const char*, int, const struct omws__getLayerAsAttachmentResponse *, const char*);
SOAP_FMAC3 struct omws__getLayerAsAttachmentResponse * SOAP_FMAC4 soap_in_omws__getLayerAsAttachmentResponse(struct soap*, const char*, struct omws__getLayerAsAttachmentResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLayerAsAttachmentResponse(struct soap*, const struct omws__getLayerAsAttachmentResponse *, const char*, const char*);

#ifndef soap_write_omws__getLayerAsAttachmentResponse
#define soap_write_omws__getLayerAsAttachmentResponse(soap, data) ( soap_serialize_omws__getLayerAsAttachmentResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getLayerAsAttachmentResponse(soap, data, "omws:getLayerAsAttachmentResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayerAsAttachmentResponse * SOAP_FMAC4 soap_get_omws__getLayerAsAttachmentResponse(struct soap*, struct omws__getLayerAsAttachmentResponse *, const char*, const char*);

#ifndef soap_read_omws__getLayerAsAttachmentResponse
#define soap_read_omws__getLayerAsAttachmentResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLayerAsAttachmentResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLayerAsAttachmentResponse * SOAP_FMAC2 soap_instantiate_omws__getLayerAsAttachmentResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLayerAsAttachmentResponse * soap_new_omws__getLayerAsAttachmentResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLayerAsAttachmentResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getLayerAsAttachmentResponse * soap_new_req_omws__getLayerAsAttachmentResponse(struct soap *soap, xsd__base64Binary& file) { struct omws__getLayerAsAttachmentResponse *_p = soap_instantiate_omws__getLayerAsAttachmentResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsAttachmentResponse(soap, _p); _p->file = file; } return _p; }

inline struct omws__getLayerAsAttachmentResponse * soap_new_set_omws__getLayerAsAttachmentResponse(struct soap *soap, xsd__base64Binary& file) { struct omws__getLayerAsAttachmentResponse *_p = soap_instantiate_omws__getLayerAsAttachmentResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayerAsAttachmentResponse(soap, _p); _p->file = file; } return _p; }

inline void soap_delete_omws__getLayerAsAttachmentResponse(struct soap *soap, struct omws__getLayerAsAttachmentResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLayerAsAttachmentResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLog
#define SOAP_TYPE_omws__getLog (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLog(struct soap*, struct omws__getLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLog(struct soap*, const struct omws__getLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLog(struct soap*, const char*, int, const struct omws__getLog *, const char*);
SOAP_FMAC3 struct omws__getLog * SOAP_FMAC4 soap_in_omws__getLog(struct soap*, const char*, struct omws__getLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLog(struct soap*, const struct omws__getLog *, const char*, const char*);

#ifndef soap_write_omws__getLog
#define soap_write_omws__getLog(soap, data) ( soap_serialize_omws__getLog(soap, data), soap_begin_send(soap) || soap_put_omws__getLog(soap, data, "omws:getLog", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLog * SOAP_FMAC4 soap_get_omws__getLog(struct soap*, struct omws__getLog *, const char*, const char*);

#ifndef soap_read_omws__getLog
#define soap_read_omws__getLog(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLog(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLog * SOAP_FMAC2 soap_instantiate_omws__getLog(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLog * soap_new_omws__getLog(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLog(soap, n, NULL, NULL, NULL); }

inline struct omws__getLog * soap_new_req_omws__getLog(struct soap *soap) { struct omws__getLog *_p = soap_instantiate_omws__getLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLog(soap, _p); } return _p; }

inline struct omws__getLog * soap_new_set_omws__getLog(struct soap *soap, char *ticket) { struct omws__getLog *_p = soap_instantiate_omws__getLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLog(soap, _p); _p->ticket = ticket; } return _p; }

inline void soap_delete_omws__getLog(struct soap *soap, struct omws__getLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLogResponse
#define SOAP_TYPE_omws__getLogResponse (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLogResponse(struct soap*, struct omws__getLogResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLogResponse(struct soap*, const struct omws__getLogResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLogResponse(struct soap*, const char*, int, const struct omws__getLogResponse *, const char*);
SOAP_FMAC3 struct omws__getLogResponse * SOAP_FMAC4 soap_in_omws__getLogResponse(struct soap*, const char*, struct omws__getLogResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLogResponse(struct soap*, const struct omws__getLogResponse *, const char*, const char*);

#ifndef soap_write_omws__getLogResponse
#define soap_write_omws__getLogResponse(soap, data) ( soap_serialize_omws__getLogResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getLogResponse(soap, data, "omws:getLogResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLogResponse * SOAP_FMAC4 soap_get_omws__getLogResponse(struct soap*, struct omws__getLogResponse *, const char*, const char*);

#ifndef soap_read_omws__getLogResponse
#define soap_read_omws__getLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLogResponse * SOAP_FMAC2 soap_instantiate_omws__getLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLogResponse * soap_new_omws__getLogResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLogResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getLogResponse * soap_new_req_omws__getLogResponse(struct soap *soap, char *log) { struct omws__getLogResponse *_p = soap_instantiate_omws__getLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLogResponse(soap, _p); _p->log = log; } return _p; }

inline struct omws__getLogResponse * soap_new_set_omws__getLogResponse(struct soap *soap, char *log) { struct omws__getLogResponse *_p = soap_instantiate_omws__getLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLogResponse(soap, _p); _p->log = log; } return _p; }

inline void soap_delete_omws__getLogResponse(struct soap *soap, struct omws__getLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getProgress
#define SOAP_TYPE_omws__getProgress (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getProgress(struct soap*, struct omws__getProgress *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getProgress(struct soap*, const struct omws__getProgress *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getProgress(struct soap*, const char*, int, const struct omws__getProgress *, const char*);
SOAP_FMAC3 struct omws__getProgress * SOAP_FMAC4 soap_in_omws__getProgress(struct soap*, const char*, struct omws__getProgress *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getProgress(struct soap*, const struct omws__getProgress *, const char*, const char*);

#ifndef soap_write_omws__getProgress
#define soap_write_omws__getProgress(soap, data) ( soap_serialize_omws__getProgress(soap, data), soap_begin_send(soap) || soap_put_omws__getProgress(soap, data, "omws:getProgress", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getProgress * SOAP_FMAC4 soap_get_omws__getProgress(struct soap*, struct omws__getProgress *, const char*, const char*);

#ifndef soap_read_omws__getProgress
#define soap_read_omws__getProgress(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getProgress(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getProgress * SOAP_FMAC2 soap_instantiate_omws__getProgress(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getProgress * soap_new_omws__getProgress(struct soap *soap, int n = -1) { return soap_instantiate_omws__getProgress(soap, n, NULL, NULL, NULL); }

inline struct omws__getProgress * soap_new_req_omws__getProgress(struct soap *soap) { struct omws__getProgress *_p = soap_instantiate_omws__getProgress(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getProgress(soap, _p); } return _p; }

inline struct omws__getProgress * soap_new_set_omws__getProgress(struct soap *soap, char *ticket) { struct omws__getProgress *_p = soap_instantiate_omws__getProgress(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getProgress(soap, _p); _p->ticket = ticket; } return _p; }

inline void soap_delete_omws__getProgress(struct soap *soap, struct omws__getProgress *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getProgress(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getProgressResponse
#define SOAP_TYPE_omws__getProgressResponse (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getProgressResponse(struct soap*, struct omws__getProgressResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getProgressResponse(struct soap*, const struct omws__getProgressResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getProgressResponse(struct soap*, const char*, int, const struct omws__getProgressResponse *, const char*);
SOAP_FMAC3 struct omws__getProgressResponse * SOAP_FMAC4 soap_in_omws__getProgressResponse(struct soap*, const char*, struct omws__getProgressResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getProgressResponse(struct soap*, const struct omws__getProgressResponse *, const char*, const char*);

#ifndef soap_write_omws__getProgressResponse
#define soap_write_omws__getProgressResponse(soap, data) ( soap_serialize_omws__getProgressResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getProgressResponse(soap, data, "omws:getProgressResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getProgressResponse * SOAP_FMAC4 soap_get_omws__getProgressResponse(struct soap*, struct omws__getProgressResponse *, const char*, const char*);

#ifndef soap_read_omws__getProgressResponse
#define soap_read_omws__getProgressResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getProgressResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getProgressResponse * SOAP_FMAC2 soap_instantiate_omws__getProgressResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getProgressResponse * soap_new_omws__getProgressResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getProgressResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getProgressResponse * soap_new_req_omws__getProgressResponse(struct soap *soap, int progress) { struct omws__getProgressResponse *_p = soap_instantiate_omws__getProgressResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getProgressResponse(soap, _p); _p->progress = progress; } return _p; }

inline struct omws__getProgressResponse * soap_new_set_omws__getProgressResponse(struct soap *soap, int progress) { struct omws__getProgressResponse *_p = soap_instantiate_omws__getProgressResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getProgressResponse(soap, _p); _p->progress = progress; } return _p; }

inline void soap_delete_omws__getProgressResponse(struct soap *soap, struct omws__getProgressResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getProgressResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__projectModel
#define SOAP_TYPE_omws__projectModel (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__projectModel(struct soap*, struct omws__projectModel *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__projectModel(struct soap*, const struct omws__projectModel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__projectModel(struct soap*, const char*, int, const struct omws__projectModel *, const char*);
SOAP_FMAC3 struct omws__projectModel * SOAP_FMAC4 soap_in_omws__projectModel(struct soap*, const char*, struct omws__projectModel *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__projectModel(struct soap*, const struct omws__projectModel *, const char*, const char*);

#ifndef soap_write_omws__projectModel
#define soap_write_omws__projectModel(soap, data) ( soap_serialize_omws__projectModel(soap, data), soap_begin_send(soap) || soap_put_omws__projectModel(soap, data, "omws:projectModel", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__projectModel * SOAP_FMAC4 soap_get_omws__projectModel(struct soap*, struct omws__projectModel *, const char*, const char*);

#ifndef soap_read_omws__projectModel
#define soap_read_omws__projectModel(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__projectModel(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__projectModel * SOAP_FMAC2 soap_instantiate_omws__projectModel(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__projectModel * soap_new_omws__projectModel(struct soap *soap, int n = -1) { return soap_instantiate_omws__projectModel(soap, n, NULL, NULL, NULL); }

inline struct omws__projectModel * soap_new_req_omws__projectModel(struct soap *soap) { struct omws__projectModel *_p = soap_instantiate_omws__projectModel(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__projectModel(soap, _p); } return _p; }

inline struct omws__projectModel * soap_new_set_omws__projectModel(struct soap *soap, wchar_t *om__ProjectionParameters) { struct omws__projectModel *_p = soap_instantiate_omws__projectModel(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__projectModel(soap, _p); _p->om__ProjectionParameters = om__ProjectionParameters; } return _p; }

inline void soap_delete_omws__projectModel(struct soap *soap, struct omws__projectModel *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__projectModel(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__projectModelResponse
#define SOAP_TYPE_omws__projectModelResponse (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__projectModelResponse(struct soap*, struct omws__projectModelResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__projectModelResponse(struct soap*, const struct omws__projectModelResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__projectModelResponse(struct soap*, const char*, int, const struct omws__projectModelResponse *, const char*);
SOAP_FMAC3 struct omws__projectModelResponse * SOAP_FMAC4 soap_in_omws__projectModelResponse(struct soap*, const char*, struct omws__projectModelResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__projectModelResponse(struct soap*, const struct omws__projectModelResponse *, const char*, const char*);

#ifndef soap_write_omws__projectModelResponse
#define soap_write_omws__projectModelResponse(soap, data) ( soap_serialize_omws__projectModelResponse(soap, data), soap_begin_send(soap) || soap_put_omws__projectModelResponse(soap, data, "omws:projectModelResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__projectModelResponse * SOAP_FMAC4 soap_get_omws__projectModelResponse(struct soap*, struct omws__projectModelResponse *, const char*, const char*);

#ifndef soap_read_omws__projectModelResponse
#define soap_read_omws__projectModelResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__projectModelResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__projectModelResponse * SOAP_FMAC2 soap_instantiate_omws__projectModelResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__projectModelResponse * soap_new_omws__projectModelResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__projectModelResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__projectModelResponse * soap_new_req_omws__projectModelResponse(struct soap *soap, char *ticket) { struct omws__projectModelResponse *_p = soap_instantiate_omws__projectModelResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__projectModelResponse(soap, _p); _p->ticket = ticket; } return _p; }

inline struct omws__projectModelResponse * soap_new_set_omws__projectModelResponse(struct soap *soap, char *ticket) { struct omws__projectModelResponse *_p = soap_instantiate_omws__projectModelResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__projectModelResponse(soap, _p); _p->ticket = ticket; } return _p; }

inline void soap_delete_omws__projectModelResponse(struct soap *soap, struct omws__projectModelResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__projectModelResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getTestResult
#define SOAP_TYPE_omws__getTestResult (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getTestResult(struct soap*, struct omws__getTestResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getTestResult(struct soap*, const struct omws__getTestResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getTestResult(struct soap*, const char*, int, const struct omws__getTestResult *, const char*);
SOAP_FMAC3 struct omws__getTestResult * SOAP_FMAC4 soap_in_omws__getTestResult(struct soap*, const char*, struct omws__getTestResult *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getTestResult(struct soap*, const struct omws__getTestResult *, const char*, const char*);

#ifndef soap_write_omws__getTestResult
#define soap_write_omws__getTestResult(soap, data) ( soap_serialize_omws__getTestResult(soap, data), soap_begin_send(soap) || soap_put_omws__getTestResult(soap, data, "omws:getTestResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getTestResult * SOAP_FMAC4 soap_get_omws__getTestResult(struct soap*, struct omws__getTestResult *, const char*, const char*);

#ifndef soap_read_omws__getTestResult
#define soap_read_omws__getTestResult(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getTestResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getTestResult * SOAP_FMAC2 soap_instantiate_omws__getTestResult(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getTestResult * soap_new_omws__getTestResult(struct soap *soap, int n = -1) { return soap_instantiate_omws__getTestResult(soap, n, NULL, NULL, NULL); }

inline struct omws__getTestResult * soap_new_req_omws__getTestResult(struct soap *soap) { struct omws__getTestResult *_p = soap_instantiate_omws__getTestResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getTestResult(soap, _p); } return _p; }

inline struct omws__getTestResult * soap_new_set_omws__getTestResult(struct soap *soap, char *ticket) { struct omws__getTestResult *_p = soap_instantiate_omws__getTestResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getTestResult(soap, _p); _p->ticket = ticket; } return _p; }

inline void soap_delete_omws__getTestResult(struct soap *soap, struct omws__getTestResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getTestResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__testResponse
#define SOAP_TYPE_omws__testResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__testResponse(struct soap*, struct omws__testResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__testResponse(struct soap*, const struct omws__testResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__testResponse(struct soap*, const char*, int, const struct omws__testResponse *, const char*);
SOAP_FMAC3 struct omws__testResponse * SOAP_FMAC4 soap_in_omws__testResponse(struct soap*, const char*, struct omws__testResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__testResponse(struct soap*, const struct omws__testResponse *, const char*, const char*);

#ifndef soap_write_omws__testResponse
#define soap_write_omws__testResponse(soap, data) ( soap_serialize_omws__testResponse(soap, data), soap_begin_send(soap) || soap_put_omws__testResponse(soap, data, "omws:testResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__testResponse * SOAP_FMAC4 soap_get_omws__testResponse(struct soap*, struct omws__testResponse *, const char*, const char*);

#ifndef soap_read_omws__testResponse
#define soap_read_omws__testResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__testResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__testResponse * SOAP_FMAC2 soap_instantiate_omws__testResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__testResponse * soap_new_omws__testResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__testResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__testResponse * soap_new_req_omws__testResponse(struct soap *soap) { struct omws__testResponse *_p = soap_instantiate_omws__testResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__testResponse(soap, _p); } return _p; }

inline struct omws__testResponse * soap_new_set_omws__testResponse(struct soap *soap, wchar_t *om__TestResultEnvelope) { struct omws__testResponse *_p = soap_instantiate_omws__testResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__testResponse(soap, _p); _p->om__TestResultEnvelope = om__TestResultEnvelope; } return _p; }

inline void soap_delete_omws__testResponse(struct soap *soap, struct omws__testResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__testResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__testModel
#define SOAP_TYPE_omws__testModel (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__testModel(struct soap*, struct omws__testModel *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__testModel(struct soap*, const struct omws__testModel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__testModel(struct soap*, const char*, int, const struct omws__testModel *, const char*);
SOAP_FMAC3 struct omws__testModel * SOAP_FMAC4 soap_in_omws__testModel(struct soap*, const char*, struct omws__testModel *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__testModel(struct soap*, const struct omws__testModel *, const char*, const char*);

#ifndef soap_write_omws__testModel
#define soap_write_omws__testModel(soap, data) ( soap_serialize_omws__testModel(soap, data), soap_begin_send(soap) || soap_put_omws__testModel(soap, data, "omws:testModel", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__testModel * SOAP_FMAC4 soap_get_omws__testModel(struct soap*, struct omws__testModel *, const char*, const char*);

#ifndef soap_read_omws__testModel
#define soap_read_omws__testModel(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__testModel(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__testModel * SOAP_FMAC2 soap_instantiate_omws__testModel(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__testModel * soap_new_omws__testModel(struct soap *soap, int n = -1) { return soap_instantiate_omws__testModel(soap, n, NULL, NULL, NULL); }

inline struct omws__testModel * soap_new_req_omws__testModel(struct soap *soap) { struct omws__testModel *_p = soap_instantiate_omws__testModel(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__testModel(soap, _p); } return _p; }

inline struct omws__testModel * soap_new_set_omws__testModel(struct soap *soap, wchar_t *om__TestParameters) { struct omws__testModel *_p = soap_instantiate_omws__testModel(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__testModel(soap, _p); _p->om__TestParameters = om__TestParameters; } return _p; }

inline void soap_delete_omws__testModel(struct soap *soap, struct omws__testModel *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__testModel(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__testModelResponse
#define SOAP_TYPE_omws__testModelResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__testModelResponse(struct soap*, struct omws__testModelResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__testModelResponse(struct soap*, const struct omws__testModelResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__testModelResponse(struct soap*, const char*, int, const struct omws__testModelResponse *, const char*);
SOAP_FMAC3 struct omws__testModelResponse * SOAP_FMAC4 soap_in_omws__testModelResponse(struct soap*, const char*, struct omws__testModelResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__testModelResponse(struct soap*, const struct omws__testModelResponse *, const char*, const char*);

#ifndef soap_write_omws__testModelResponse
#define soap_write_omws__testModelResponse(soap, data) ( soap_serialize_omws__testModelResponse(soap, data), soap_begin_send(soap) || soap_put_omws__testModelResponse(soap, data, "omws:testModelResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__testModelResponse * SOAP_FMAC4 soap_get_omws__testModelResponse(struct soap*, struct omws__testModelResponse *, const char*, const char*);

#ifndef soap_read_omws__testModelResponse
#define soap_read_omws__testModelResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__testModelResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__testModelResponse * SOAP_FMAC2 soap_instantiate_omws__testModelResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__testModelResponse * soap_new_omws__testModelResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__testModelResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__testModelResponse * soap_new_req_omws__testModelResponse(struct soap *soap, char *ticket) { struct omws__testModelResponse *_p = soap_instantiate_omws__testModelResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__testModelResponse(soap, _p); _p->ticket = ticket; } return _p; }

inline struct omws__testModelResponse * soap_new_set_omws__testModelResponse(struct soap *soap, char *ticket) { struct omws__testModelResponse *_p = soap_instantiate_omws__testModelResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__testModelResponse(soap, _p); _p->ticket = ticket; } return _p; }

inline void soap_delete_omws__testModelResponse(struct soap *soap, struct omws__testModelResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__testModelResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getModel
#define SOAP_TYPE_omws__getModel (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getModel(struct soap*, struct omws__getModel *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getModel(struct soap*, const struct omws__getModel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getModel(struct soap*, const char*, int, const struct omws__getModel *, const char*);
SOAP_FMAC3 struct omws__getModel * SOAP_FMAC4 soap_in_omws__getModel(struct soap*, const char*, struct omws__getModel *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getModel(struct soap*, const struct omws__getModel *, const char*, const char*);

#ifndef soap_write_omws__getModel
#define soap_write_omws__getModel(soap, data) ( soap_serialize_omws__getModel(soap, data), soap_begin_send(soap) || soap_put_omws__getModel(soap, data, "omws:getModel", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getModel * SOAP_FMAC4 soap_get_omws__getModel(struct soap*, struct omws__getModel *, const char*, const char*);

#ifndef soap_read_omws__getModel
#define soap_read_omws__getModel(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getModel(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getModel * SOAP_FMAC2 soap_instantiate_omws__getModel(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getModel * soap_new_omws__getModel(struct soap *soap, int n = -1) { return soap_instantiate_omws__getModel(soap, n, NULL, NULL, NULL); }

inline struct omws__getModel * soap_new_req_omws__getModel(struct soap *soap) { struct omws__getModel *_p = soap_instantiate_omws__getModel(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getModel(soap, _p); } return _p; }

inline struct omws__getModel * soap_new_set_omws__getModel(struct soap *soap, char *ticket) { struct omws__getModel *_p = soap_instantiate_omws__getModel(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getModel(soap, _p); _p->ticket = ticket; } return _p; }

inline void soap_delete_omws__getModel(struct soap *soap, struct omws__getModel *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getModel(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getModelResponse
#define SOAP_TYPE_omws__getModelResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getModelResponse(struct soap*, struct omws__getModelResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getModelResponse(struct soap*, const struct omws__getModelResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getModelResponse(struct soap*, const char*, int, const struct omws__getModelResponse *, const char*);
SOAP_FMAC3 struct omws__getModelResponse * SOAP_FMAC4 soap_in_omws__getModelResponse(struct soap*, const char*, struct omws__getModelResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getModelResponse(struct soap*, const struct omws__getModelResponse *, const char*, const char*);

#ifndef soap_write_omws__getModelResponse
#define soap_write_omws__getModelResponse(soap, data) ( soap_serialize_omws__getModelResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getModelResponse(soap, data, "omws:getModelResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getModelResponse * SOAP_FMAC4 soap_get_omws__getModelResponse(struct soap*, struct omws__getModelResponse *, const char*, const char*);

#ifndef soap_read_omws__getModelResponse
#define soap_read_omws__getModelResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getModelResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getModelResponse * SOAP_FMAC2 soap_instantiate_omws__getModelResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getModelResponse * soap_new_omws__getModelResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getModelResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getModelResponse * soap_new_req_omws__getModelResponse(struct soap *soap) { struct omws__getModelResponse *_p = soap_instantiate_omws__getModelResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getModelResponse(soap, _p); } return _p; }

inline struct omws__getModelResponse * soap_new_set_omws__getModelResponse(struct soap *soap, wchar_t *om__ModelEnvelope) { struct omws__getModelResponse *_p = soap_instantiate_omws__getModelResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getModelResponse(soap, _p); _p->om__ModelEnvelope = om__ModelEnvelope; } return _p; }

inline void soap_delete_omws__getModelResponse(struct soap *soap, struct omws__getModelResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getModelResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__createModel
#define SOAP_TYPE_omws__createModel (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__createModel(struct soap*, struct omws__createModel *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__createModel(struct soap*, const struct omws__createModel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__createModel(struct soap*, const char*, int, const struct omws__createModel *, const char*);
SOAP_FMAC3 struct omws__createModel * SOAP_FMAC4 soap_in_omws__createModel(struct soap*, const char*, struct omws__createModel *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__createModel(struct soap*, const struct omws__createModel *, const char*, const char*);

#ifndef soap_write_omws__createModel
#define soap_write_omws__createModel(soap, data) ( soap_serialize_omws__createModel(soap, data), soap_begin_send(soap) || soap_put_omws__createModel(soap, data, "omws:createModel", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__createModel * SOAP_FMAC4 soap_get_omws__createModel(struct soap*, struct omws__createModel *, const char*, const char*);

#ifndef soap_read_omws__createModel
#define soap_read_omws__createModel(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__createModel(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__createModel * SOAP_FMAC2 soap_instantiate_omws__createModel(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__createModel * soap_new_omws__createModel(struct soap *soap, int n = -1) { return soap_instantiate_omws__createModel(soap, n, NULL, NULL, NULL); }

inline struct omws__createModel * soap_new_req_omws__createModel(struct soap *soap) { struct omws__createModel *_p = soap_instantiate_omws__createModel(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__createModel(soap, _p); } return _p; }

inline struct omws__createModel * soap_new_set_omws__createModel(struct soap *soap, wchar_t *om__ModelParameters) { struct omws__createModel *_p = soap_instantiate_omws__createModel(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__createModel(soap, _p); _p->om__ModelParameters = om__ModelParameters; } return _p; }

inline void soap_delete_omws__createModel(struct soap *soap, struct omws__createModel *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__createModel(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__createModelResponse
#define SOAP_TYPE_omws__createModelResponse (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__createModelResponse(struct soap*, struct omws__createModelResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__createModelResponse(struct soap*, const struct omws__createModelResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__createModelResponse(struct soap*, const char*, int, const struct omws__createModelResponse *, const char*);
SOAP_FMAC3 struct omws__createModelResponse * SOAP_FMAC4 soap_in_omws__createModelResponse(struct soap*, const char*, struct omws__createModelResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__createModelResponse(struct soap*, const struct omws__createModelResponse *, const char*, const char*);

#ifndef soap_write_omws__createModelResponse
#define soap_write_omws__createModelResponse(soap, data) ( soap_serialize_omws__createModelResponse(soap, data), soap_begin_send(soap) || soap_put_omws__createModelResponse(soap, data, "omws:createModelResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__createModelResponse * SOAP_FMAC4 soap_get_omws__createModelResponse(struct soap*, struct omws__createModelResponse *, const char*, const char*);

#ifndef soap_read_omws__createModelResponse
#define soap_read_omws__createModelResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__createModelResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__createModelResponse * SOAP_FMAC2 soap_instantiate_omws__createModelResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__createModelResponse * soap_new_omws__createModelResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__createModelResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__createModelResponse * soap_new_req_omws__createModelResponse(struct soap *soap, char *ticket) { struct omws__createModelResponse *_p = soap_instantiate_omws__createModelResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__createModelResponse(soap, _p); _p->ticket = ticket; } return _p; }

inline struct omws__createModelResponse * soap_new_set_omws__createModelResponse(struct soap *soap, char *ticket) { struct omws__createModelResponse *_p = soap_instantiate_omws__createModelResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__createModelResponse(soap, _p); _p->ticket = ticket; } return _p; }

inline void soap_delete_omws__createModelResponse(struct soap *soap, struct omws__createModelResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__createModelResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLayers
#define SOAP_TYPE_omws__getLayers (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLayers(struct soap*, struct omws__getLayers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLayers(struct soap*, const struct omws__getLayers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLayers(struct soap*, const char*, int, const struct omws__getLayers *, const char*);
SOAP_FMAC3 struct omws__getLayers * SOAP_FMAC4 soap_in_omws__getLayers(struct soap*, const char*, struct omws__getLayers *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLayers(struct soap*, const struct omws__getLayers *, const char*, const char*);

#ifndef soap_write_omws__getLayers
#define soap_write_omws__getLayers(soap, data) ( soap_serialize_omws__getLayers(soap, data), soap_begin_send(soap) || soap_put_omws__getLayers(soap, data, "omws:getLayers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayers * SOAP_FMAC4 soap_get_omws__getLayers(struct soap*, struct omws__getLayers *, const char*, const char*);

#ifndef soap_read_omws__getLayers
#define soap_read_omws__getLayers(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLayers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLayers * SOAP_FMAC2 soap_instantiate_omws__getLayers(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLayers * soap_new_omws__getLayers(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLayers(soap, n, NULL, NULL, NULL); }

inline struct omws__getLayers * soap_new_req_omws__getLayers(struct soap *soap) { struct omws__getLayers *_p = soap_instantiate_omws__getLayers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayers(soap, _p); } return _p; }

inline struct omws__getLayers * soap_new_set_omws__getLayers(struct soap *soap, void *_) { struct omws__getLayers *_p = soap_instantiate_omws__getLayers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayers(soap, _p); _p->_ = _; } return _p; }

inline void soap_delete_omws__getLayers(struct soap *soap, struct omws__getLayers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLayers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getLayersResponse
#define SOAP_TYPE_omws__getLayersResponse (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getLayersResponse(struct soap*, struct omws__getLayersResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getLayersResponse(struct soap*, const struct omws__getLayersResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getLayersResponse(struct soap*, const char*, int, const struct omws__getLayersResponse *, const char*);
SOAP_FMAC3 struct omws__getLayersResponse * SOAP_FMAC4 soap_in_omws__getLayersResponse(struct soap*, const char*, struct omws__getLayersResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getLayersResponse(struct soap*, const struct omws__getLayersResponse *, const char*, const char*);

#ifndef soap_write_omws__getLayersResponse
#define soap_write_omws__getLayersResponse(soap, data) ( soap_serialize_omws__getLayersResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getLayersResponse(soap, data, "omws:getLayersResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayersResponse * SOAP_FMAC4 soap_get_omws__getLayersResponse(struct soap*, struct omws__getLayersResponse *, const char*, const char*);

#ifndef soap_read_omws__getLayersResponse
#define soap_read_omws__getLayersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getLayersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getLayersResponse * SOAP_FMAC2 soap_instantiate_omws__getLayersResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getLayersResponse * soap_new_omws__getLayersResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getLayersResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getLayersResponse * soap_new_req_omws__getLayersResponse(struct soap *soap) { struct omws__getLayersResponse *_p = soap_instantiate_omws__getLayersResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayersResponse(soap, _p); } return _p; }

inline struct omws__getLayersResponse * soap_new_set_omws__getLayersResponse(struct soap *soap, wchar_t *om__AvailableLayers) { struct omws__getLayersResponse *_p = soap_instantiate_omws__getLayersResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getLayersResponse(soap, _p); _p->om__AvailableLayers = om__AvailableLayers; } return _p; }

inline void soap_delete_omws__getLayersResponse(struct soap *soap, struct omws__getLayersResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getLayersResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getAlgorithms
#define SOAP_TYPE_omws__getAlgorithms (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getAlgorithms(struct soap*, struct omws__getAlgorithms *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getAlgorithms(struct soap*, const struct omws__getAlgorithms *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getAlgorithms(struct soap*, const char*, int, const struct omws__getAlgorithms *, const char*);
SOAP_FMAC3 struct omws__getAlgorithms * SOAP_FMAC4 soap_in_omws__getAlgorithms(struct soap*, const char*, struct omws__getAlgorithms *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getAlgorithms(struct soap*, const struct omws__getAlgorithms *, const char*, const char*);

#ifndef soap_write_omws__getAlgorithms
#define soap_write_omws__getAlgorithms(soap, data) ( soap_serialize_omws__getAlgorithms(soap, data), soap_begin_send(soap) || soap_put_omws__getAlgorithms(soap, data, "omws:getAlgorithms", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getAlgorithms * SOAP_FMAC4 soap_get_omws__getAlgorithms(struct soap*, struct omws__getAlgorithms *, const char*, const char*);

#ifndef soap_read_omws__getAlgorithms
#define soap_read_omws__getAlgorithms(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getAlgorithms(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getAlgorithms * SOAP_FMAC2 soap_instantiate_omws__getAlgorithms(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getAlgorithms * soap_new_omws__getAlgorithms(struct soap *soap, int n = -1) { return soap_instantiate_omws__getAlgorithms(soap, n, NULL, NULL, NULL); }

inline struct omws__getAlgorithms * soap_new_req_omws__getAlgorithms(struct soap *soap) { struct omws__getAlgorithms *_p = soap_instantiate_omws__getAlgorithms(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getAlgorithms(soap, _p); } return _p; }

inline struct omws__getAlgorithms * soap_new_set_omws__getAlgorithms(struct soap *soap, void *_) { struct omws__getAlgorithms *_p = soap_instantiate_omws__getAlgorithms(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getAlgorithms(soap, _p); _p->_ = _; } return _p; }

inline void soap_delete_omws__getAlgorithms(struct soap *soap, struct omws__getAlgorithms *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getAlgorithms(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__getAlgorithmsResponse
#define SOAP_TYPE_omws__getAlgorithmsResponse (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__getAlgorithmsResponse(struct soap*, struct omws__getAlgorithmsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__getAlgorithmsResponse(struct soap*, const struct omws__getAlgorithmsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__getAlgorithmsResponse(struct soap*, const char*, int, const struct omws__getAlgorithmsResponse *, const char*);
SOAP_FMAC3 struct omws__getAlgorithmsResponse * SOAP_FMAC4 soap_in_omws__getAlgorithmsResponse(struct soap*, const char*, struct omws__getAlgorithmsResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__getAlgorithmsResponse(struct soap*, const struct omws__getAlgorithmsResponse *, const char*, const char*);

#ifndef soap_write_omws__getAlgorithmsResponse
#define soap_write_omws__getAlgorithmsResponse(soap, data) ( soap_serialize_omws__getAlgorithmsResponse(soap, data), soap_begin_send(soap) || soap_put_omws__getAlgorithmsResponse(soap, data, "omws:getAlgorithmsResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getAlgorithmsResponse * SOAP_FMAC4 soap_get_omws__getAlgorithmsResponse(struct soap*, struct omws__getAlgorithmsResponse *, const char*, const char*);

#ifndef soap_read_omws__getAlgorithmsResponse
#define soap_read_omws__getAlgorithmsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__getAlgorithmsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__getAlgorithmsResponse * SOAP_FMAC2 soap_instantiate_omws__getAlgorithmsResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__getAlgorithmsResponse * soap_new_omws__getAlgorithmsResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__getAlgorithmsResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__getAlgorithmsResponse * soap_new_req_omws__getAlgorithmsResponse(struct soap *soap) { struct omws__getAlgorithmsResponse *_p = soap_instantiate_omws__getAlgorithmsResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getAlgorithmsResponse(soap, _p); } return _p; }

inline struct omws__getAlgorithmsResponse * soap_new_set_omws__getAlgorithmsResponse(struct soap *soap, wchar_t *om__AvailableAlgorithms) { struct omws__getAlgorithmsResponse *_p = soap_instantiate_omws__getAlgorithmsResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__getAlgorithmsResponse(soap, _p); _p->om__AvailableAlgorithms = om__AvailableAlgorithms; } return _p; }

inline void soap_delete_omws__getAlgorithmsResponse(struct soap *soap, struct omws__getAlgorithmsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__getAlgorithmsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__ping
#define SOAP_TYPE_omws__ping (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__ping(struct soap*, struct omws__ping *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__ping(struct soap*, const struct omws__ping *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__ping(struct soap*, const char*, int, const struct omws__ping *, const char*);
SOAP_FMAC3 struct omws__ping * SOAP_FMAC4 soap_in_omws__ping(struct soap*, const char*, struct omws__ping *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__ping(struct soap*, const struct omws__ping *, const char*, const char*);

#ifndef soap_write_omws__ping
#define soap_write_omws__ping(soap, data) ( soap_serialize_omws__ping(soap, data), soap_begin_send(soap) || soap_put_omws__ping(soap, data, "omws:ping", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__ping * SOAP_FMAC4 soap_get_omws__ping(struct soap*, struct omws__ping *, const char*, const char*);

#ifndef soap_read_omws__ping
#define soap_read_omws__ping(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__ping(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__ping * SOAP_FMAC2 soap_instantiate_omws__ping(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__ping * soap_new_omws__ping(struct soap *soap, int n = -1) { return soap_instantiate_omws__ping(soap, n, NULL, NULL, NULL); }

inline struct omws__ping * soap_new_req_omws__ping(struct soap *soap) { struct omws__ping *_p = soap_instantiate_omws__ping(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__ping(soap, _p); } return _p; }

inline struct omws__ping * soap_new_set_omws__ping(struct soap *soap, void *_) { struct omws__ping *_p = soap_instantiate_omws__ping(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__ping(soap, _p); _p->_ = _; } return _p; }

inline void soap_delete_omws__ping(struct soap *soap, struct omws__ping *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__ping(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_omws__pingResponse
#define SOAP_TYPE_omws__pingResponse (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_omws__pingResponse(struct soap*, struct omws__pingResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_omws__pingResponse(struct soap*, const struct omws__pingResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_omws__pingResponse(struct soap*, const char*, int, const struct omws__pingResponse *, const char*);
SOAP_FMAC3 struct omws__pingResponse * SOAP_FMAC4 soap_in_omws__pingResponse(struct soap*, const char*, struct omws__pingResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_omws__pingResponse(struct soap*, const struct omws__pingResponse *, const char*, const char*);

#ifndef soap_write_omws__pingResponse
#define soap_write_omws__pingResponse(soap, data) ( soap_serialize_omws__pingResponse(soap, data), soap_begin_send(soap) || soap_put_omws__pingResponse(soap, data, "omws:pingResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__pingResponse * SOAP_FMAC4 soap_get_omws__pingResponse(struct soap*, struct omws__pingResponse *, const char*, const char*);

#ifndef soap_read_omws__pingResponse
#define soap_read_omws__pingResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_omws__pingResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct omws__pingResponse * SOAP_FMAC2 soap_instantiate_omws__pingResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct omws__pingResponse * soap_new_omws__pingResponse(struct soap *soap, int n = -1) { return soap_instantiate_omws__pingResponse(soap, n, NULL, NULL, NULL); }

inline struct omws__pingResponse * soap_new_req_omws__pingResponse(struct soap *soap, int status) { struct omws__pingResponse *_p = soap_instantiate_omws__pingResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__pingResponse(soap, _p); _p->status = status; } return _p; }

inline struct omws__pingResponse * soap_new_set_omws__pingResponse(struct soap *soap, int status) { struct omws__pingResponse *_p = soap_instantiate_omws__pingResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_omws__pingResponse(soap, _p); _p->status = status; } return _p; }

inline void soap_delete_omws__pingResponse(struct soap *soap, struct omws__pingResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_omws__pingResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap, char *omws__version) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); _p->omws__version = omws__version; } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerToomws__getProjectionMetadataResponse
#define SOAP_TYPE_PointerToomws__getProjectionMetadataResponse (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToomws__getProjectionMetadataResponse(struct soap*, struct omws__getProjectionMetadataResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToomws__getProjectionMetadataResponse(struct soap*, const char *, int, struct omws__getProjectionMetadataResponse *const*, const char *);
SOAP_FMAC3 struct omws__getProjectionMetadataResponse ** SOAP_FMAC4 soap_in_PointerToomws__getProjectionMetadataResponse(struct soap*, const char*, struct omws__getProjectionMetadataResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToomws__getProjectionMetadataResponse(struct soap*, struct omws__getProjectionMetadataResponse *const*, const char*, const char*);

#ifndef soap_write_PointerToomws__getProjectionMetadataResponse
#define soap_write_PointerToomws__getProjectionMetadataResponse(soap, data) ( soap_serialize_PointerToomws__getProjectionMetadataResponse(soap, data), soap_begin_send(soap) || soap_put_PointerToomws__getProjectionMetadataResponse(soap, data, "omws:getProjectionMetadataResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getProjectionMetadataResponse ** SOAP_FMAC4 soap_get_PointerToomws__getProjectionMetadataResponse(struct soap*, struct omws__getProjectionMetadataResponse **, const char*, const char*);

#ifndef soap_read_PointerToomws__getProjectionMetadataResponse
#define soap_read_PointerToomws__getProjectionMetadataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToomws__getProjectionMetadataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_serialize_PointerTounsignedByte(soap, data), soap_begin_send(soap) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToomws__testResponse
#define SOAP_TYPE_PointerToomws__testResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToomws__testResponse(struct soap*, struct omws__testResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToomws__testResponse(struct soap*, const char *, int, struct omws__testResponse *const*, const char *);
SOAP_FMAC3 struct omws__testResponse ** SOAP_FMAC4 soap_in_PointerToomws__testResponse(struct soap*, const char*, struct omws__testResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToomws__testResponse(struct soap*, struct omws__testResponse *const*, const char*, const char*);

#ifndef soap_write_PointerToomws__testResponse
#define soap_write_PointerToomws__testResponse(soap, data) ( soap_serialize_PointerToomws__testResponse(soap, data), soap_begin_send(soap) || soap_put_PointerToomws__testResponse(soap, data, "omws:testResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__testResponse ** SOAP_FMAC4 soap_get_PointerToomws__testResponse(struct soap*, struct omws__testResponse **, const char*, const char*);

#ifndef soap_read_PointerToomws__testResponse
#define soap_read_PointerToomws__testResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToomws__testResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToomws__getModelResponse
#define SOAP_TYPE_PointerToomws__getModelResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToomws__getModelResponse(struct soap*, struct omws__getModelResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToomws__getModelResponse(struct soap*, const char *, int, struct omws__getModelResponse *const*, const char *);
SOAP_FMAC3 struct omws__getModelResponse ** SOAP_FMAC4 soap_in_PointerToomws__getModelResponse(struct soap*, const char*, struct omws__getModelResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToomws__getModelResponse(struct soap*, struct omws__getModelResponse *const*, const char*, const char*);

#ifndef soap_write_PointerToomws__getModelResponse
#define soap_write_PointerToomws__getModelResponse(soap, data) ( soap_serialize_PointerToomws__getModelResponse(soap, data), soap_begin_send(soap) || soap_put_PointerToomws__getModelResponse(soap, data, "omws:getModelResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getModelResponse ** SOAP_FMAC4 soap_get_PointerToomws__getModelResponse(struct soap*, struct omws__getModelResponse **, const char*, const char*);

#ifndef soap_read_PointerToomws__getModelResponse
#define soap_read_PointerToomws__getModelResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToomws__getModelResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToomws__getLayersResponse
#define SOAP_TYPE_PointerToomws__getLayersResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToomws__getLayersResponse(struct soap*, struct omws__getLayersResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToomws__getLayersResponse(struct soap*, const char *, int, struct omws__getLayersResponse *const*, const char *);
SOAP_FMAC3 struct omws__getLayersResponse ** SOAP_FMAC4 soap_in_PointerToomws__getLayersResponse(struct soap*, const char*, struct omws__getLayersResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToomws__getLayersResponse(struct soap*, struct omws__getLayersResponse *const*, const char*, const char*);

#ifndef soap_write_PointerToomws__getLayersResponse
#define soap_write_PointerToomws__getLayersResponse(soap, data) ( soap_serialize_PointerToomws__getLayersResponse(soap, data), soap_begin_send(soap) || soap_put_PointerToomws__getLayersResponse(soap, data, "omws:getLayersResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getLayersResponse ** SOAP_FMAC4 soap_get_PointerToomws__getLayersResponse(struct soap*, struct omws__getLayersResponse **, const char*, const char*);

#ifndef soap_read_PointerToomws__getLayersResponse
#define soap_read_PointerToomws__getLayersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToomws__getLayersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToomws__getAlgorithmsResponse
#define SOAP_TYPE_PointerToomws__getAlgorithmsResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToomws__getAlgorithmsResponse(struct soap*, struct omws__getAlgorithmsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToomws__getAlgorithmsResponse(struct soap*, const char *, int, struct omws__getAlgorithmsResponse *const*, const char *);
SOAP_FMAC3 struct omws__getAlgorithmsResponse ** SOAP_FMAC4 soap_in_PointerToomws__getAlgorithmsResponse(struct soap*, const char*, struct omws__getAlgorithmsResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToomws__getAlgorithmsResponse(struct soap*, struct omws__getAlgorithmsResponse *const*, const char*, const char*);

#ifndef soap_write_PointerToomws__getAlgorithmsResponse
#define soap_write_PointerToomws__getAlgorithmsResponse(soap, data) ( soap_serialize_PointerToomws__getAlgorithmsResponse(soap, data), soap_begin_send(soap) || soap_put_PointerToomws__getAlgorithmsResponse(soap, data, "omws:getAlgorithmsResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct omws__getAlgorithmsResponse ** SOAP_FMAC4 soap_get_PointerToomws__getAlgorithmsResponse(struct soap*, struct omws__getAlgorithmsResponse **, const char*, const char*);

#ifndef soap_read_PointerToomws__getAlgorithmsResponse
#define soap_read_PointerToomws__getAlgorithmsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToomws__getAlgorithmsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wstring
#define SOAP_TYPE_wstring (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstring(struct soap*, wchar_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstring(struct soap*, const char*, int, wchar_t*const*, const char*);
SOAP_FMAC3 wchar_t * * SOAP_FMAC4 soap_in_wstring(struct soap*, const char*, wchar_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstring(struct soap*, wchar_t *const*, const char*, const char*);

#ifndef soap_write_wstring
#define soap_write_wstring(soap, data) ( soap_serialize_wstring(soap, data), soap_begin_send(soap) || soap_put_wstring(soap, data, "wchar", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 wchar_t ** SOAP_FMAC4 soap_get_wstring(struct soap*, wchar_t **, const char*, const char*);

#ifndef soap_read_wstring
#define soap_read_wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_wstring(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (7)
#endif

#define soap_default_xsd__string(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_serialize_xsd__string(soap, data), soap_begin_send(soap) || soap_put_xsd__string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

/* End of soapH.h */
